
import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;
import life.genny.qwanda.entity.BaseEntity;

import life.genny.qwanda.message.QEventMessage;

rule "Geofence Enter"
   when
     $m : QEventMessage( event_type == "GEOFENCE_ENTRY" )
     rules: QRules()
   then
       
   		RulesUtils.header(drools.getRule().getName());
     
   		String begCode = $m.data.getCode();
   		String action = $m.data.getValue();
   		
   		RulesUtils.println(begCode);
   		RulesUtils.println(action);
   		
  		RulesUtils.footer(drools.getRule().getName());

end

//
//rule "BucketView GEOFENCE-EXIT"
//  when
//     $m : QEventMessage( event_type == "GEOFENCE_EXIT")
//     rules: QRules()
//  then
//  
//     System.out.println(LOG_YELLOW + "========================================================================================================================================" + LOG_RESET);
//     System.out.println(LOG_GREEN + "RULE EXECUTED      ::   GeoFence Exit- Load In Transit" + LOG_RESET);
//     System.out.println(" The BEG code is: "+$m.data.getCode());
//    
////     String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL")==null?System.getenv("REACT_APP_QWANDA_API_URL"):REACT_APP_QWANDA_API_URL;
////     String tokenString = (String)$map.get("token");
////     String[] code = $m.data.getCode().split("_EXIT_SOURCE");
////     System.out.println("The BEG code after split: "+code[0]);
////     //Moving the BEG
////     JsonObject begEntity = new JsonObject();
////     begEntity.put("sourceCode","GRP_APPROVED");
////     begEntity.put("targetCode",code[0]);
////     begEntity.put("attributeCode", "LNK_CORE");
////     System.out.println("------ BEG ENtity: -- "+begEntity.toString());
////     String output= QwandaUtils.apiPostEntity(qwandaServiceUrl+"/qwanda/baseentitys/move/GRP_IN_TRANSIT", begEntity.toString(), tokenString);
//// 	 System.out.println("The Output after POST: "+output);
//// 	 //Fectching updated link of BEG
//// 	 JsonArray updatedLink = new JsonArray(QwandaUtils.apiGet(qwandaServiceUrl+"/qwanda/entityentitys/"+code[0]+"/linkcodes/LNK_CORE", tokenString));
////	 //Creating a data msg
//// 	 JsonObject newLink = new JsonObject();
//// 	 newLink.put("msg_type", "DATA_MSG");
////     newLink.put("data_type", "LINK_CHANGE");
////     newLink.put("items", updatedLink);
////     newLink.put("token", $value);
////     System.out.println("---------------------");
////     System.out.println("Updated Link: "+newLink.toString());
////     System.out.println("---------------------");
//// 	 bus.publish("cmds", newLink);
////
//// 	  //Sending message to Message Service
////       //Send evt_msg to Message
//// 	   String begCode = "code:"+code[0];
//// 	  // String sourceBE = "sourceBE:GRP_APPROVED";
//// 	   //String targerBE = "targetBE:GRP_IN_TRANSIT";
//// 	   String[] msgMessageData = {begCode, "recipient:OWNER"};
//// 	   String msgTemplateCode = "MSG_CH40_MOVE_GRP_IN_TRANSIT";
//// 	   String[] attachments = {};
//// 	   System.out.println("msgMessageData String Arrray: "+msgMessageData.toString());
////
//// 	 //Creating messageData MSG_MESSAGE
//// 	 QMSGMessage msgMessage = new QMSGMessage("MSG_MESSAGE", msgTemplateCode, msgMessageData, QBaseMSGMessageType.EMAIL, attachments);
//// 	 JsonObject jsonMessage = new JsonObject().mapFrom(msgMessage);
//// 	 jsonMessage.put("token",tokenString);
//// 	//String jsonMessage = gson.toJson(msgMessage);
//// 	 System.out.println("-----------------------------");
//// 	 System.out.println("The Message to Message Service is: "+jsonMessage.toString());
//// 	 System.out.println("-----------------------------");
//// 	 bus.publish("messages", jsonMessage);
// 	 System.out.println( "\n" + LOG_RED + "RULE TERMINATED    ::    GeoFence Exit- Load In Transit " + LOG_RESET);
//     System.out.println(LOG_YELLOW + "-----------------------------------------------------------------------------------------------" + LOG_RESET);
//
//end


//Geofence Entry to Destination GPS data
//rule "BucketView GEOFENCE-ENTRY DESTINATION"
//   when
//     $m : QEventMessage( event_type == "GEOFENCE_ENTER" && data.value == "ENTER_DESTINATION" )
//     bus: EventBus()
//     $map : Map($value: this["token"] != null)
//   then
//      System.out.println(LOG_YELLOW + "========================================================================================================================================" + LOG_RESET);
//      System.out.println(LOG_GREEN + "RULE EXECUTED      ::   GEOFENCE-ENTRY DESTINATION " + LOG_RESET);
//      String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL")==null?System.getenv("REACT_APP_QWANDA_API_URL"):REACT_APP_QWANDA_API_URL;
//      String tokenString = (String)$map.get("token");
//      String[] code = $m.data.getCode().split("_ENTER_DESTINATION");
//      System.out.println("The BEG code after split: "+code[0]);
//      //Moving the BEG
//     JsonObject begEntity = new JsonObject();
//     begEntity.put("sourceCode","GRP_IN_TRANSIT");
//     begEntity.put("targetCode",code[0]);
//     begEntity.put("attributeCode", "LNK_CORE");
//     String output= QwandaUtils.apiPostEntity(qwandaServiceUrl+"/qwanda/baseentitys/move/GRP_COMPLETED", begEntity.toString(), tokenString);
// 	 System.out.println("The Output after POST: "+output);
// 	 //Fectching updated link of BEG
// 	 JsonArray updatedLink = new JsonArray(QwandaUtils.apiGet(qwandaServiceUrl+"/qwanda/entityentitys/"+code[0]+"/linkcodes/LNK_CORE", tokenString));
//     //Creating a data msg
// 	 JsonObject newLink = new JsonObject();
// 	 newLink.put("msg_type", "DATA_MSG");
//     newLink.put("data_type", "LINK_CHANGE");
//     newLink.put("items", updatedLink);
//     newLink.put("token", $value);
//     System.out.println("---------------------");
//     System.out.println("Updated Link: "+newLink.toString());
//     System.out.println("---------------------");
// 	 bus.publish("cmds", newLink);
//
// 	  //Sending message to Message Service
//       //Send evt_msg to Message
// 	   String begCode = "code:"+$m.data.getCode();
// 	  // String sourceBE = "sourceBE:GRP_APPROVED";
// 	  // String targerBE = "targetBE:GRP_COMPLETED";
// 	   String[] msgMessageData = {begCode,"recipient:OWNER"};
// 	    String msgTemplateCode = "MSG_CH40_MOVE_GRP_COMPLETED";
// 	   String[] attachments = {};
// 	   System.out.println("msgMessageData String Arrray: "+msgMessageData.toString());
//
// 	 //Creating messageData MSG_MESSAGE
// 	 QMSGMessage msgMessage = new QMSGMessage("MSG_MESSAGE", msgTemplateCode, msgMessageData, QBaseMSGMessageType.EMAIL, attachments);
// 	 JsonObject jsonMessage = new JsonObject().mapFrom(msgMessage);
// 	 jsonMessage.put("token",tokenString);
// 	//  String jsonMessage = gson.toJson(msgMessage);
// 	 System.out.println("-----------------------------");
// 	 System.out.println("The Message to Message Service is: "+jsonMessage.toString());
// 	 System.out.println("-----------------------------");
// 	 bus.publish("messages", jsonMessage);
// 	 System.out.println( "\n" + LOG_RED + "RULE TERMINATED    ::    GEOFENCE-ENTRY DESTINATION " + LOG_RESET);
//     System.out.println(LOG_YELLOW + "-----------------------------------------------------------------------------------------------" + LOG_RESET);
//end
//
