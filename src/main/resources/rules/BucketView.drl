package com.sample
 
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QEventLinkChangeMessage;
import life.genny.qwanda.message.QCmdGeofenceMessage;
import life.genny.qwanda.entity.EntityEntity;
import org.apache.commons.lang3.StringUtils;
import io.vertx.rxjava.core.eventbus.EventBus;
import io.vertx.core.buffer.Buffer;
import com.google.gson.Gson;
import life.genny.qwanda.Answer;
import life.genny.qwanda.GPS;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;

import java.lang.reflect.Type;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.JsonPrimitive;
import com.google.gson.JsonSerializationContext;
import com.google.gson.FieldNamingPolicy;
import io.vertx.core.json.JsonObject;
import java.time.format.DateTimeFormatter;
import life.genny.qwanda.DateTimeDeserializer;

global java.lang.String REACT_APP_QWANDA_API_URL;

 
/*
//BucketView element Transaction
rule "BucketView Grp Change"
  when
        $m : QEventLinkChangeMessage( event_type == "EVT_LINK_CHANGE" && ( (sourceBaseEntityCode == "GRP_NO_QUOTES" && targetBaseEntityCode == "GRP_QUOTES") || (sourceBaseEntityCode == "GRP_APPROVED" && targetBaseEntityCode == "GRP_IN_TRANSIT") || (sourceBaseEntityCode == "GRP_IN_TRANSIT" && targetBaseEntityCode == "GRP_COMPLETED") || (sourceBaseEntityCode == "GRP_COMPLETED" && targetBaseEntityCode == "GRP_PAID")) )
        bus: EventBus()
        $map : Map($value: this["token"] != null)
    then
 	    System.out.println("-------- Rule:- Drag and Drop BucketView Items --------");	  
		String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL")==null?System.getenv("REACT_APP_QWANDA_API_URL"):REACT_APP_QWANDA_API_URL;
  	    String tokenString = (String)$map.get("token");
		System.out.println("tokenstr="+StringUtils.abbreviateMiddle(tokenString, "...", 40));
		System.out.println("The Event Message received is: " +$m);
		System.out.println("The Source Code is: " +$m.getSourceBaseEntityCode());
	    System.out.println("The Target Code is: " +$m.getTargetBaseEntityCode());
		System.out.println("The Data Code (BEG code) is: " +$m.data.getCode());
	    System.out.println("The Data Value is: " +$m.data.getValue());
	    
         JsonObject begEntity = new JsonObject();
         begEntity.put("parentCode",$m.getSourceBaseEntityCode());
         begEntity.put("targetCode",$m.data.getCode());
         begEntity.put("linkCode",$m.getLinkCode());
         System.out.println("--------------------------");
         System.out.println("EntityEntity : "+begEntity.toString());
         System.out.println("--------------------------");
	     //String output= QwandaUtils.apiPostEntity(qwandaServiceUrl+"/qwanda/baseentitys/move/"+$m.getTargetBaseEntityCode(), begEntity.toString(), tokenString);
         //System.out.println("The Output after POST: "+output);
         JsonArray entityEntity = new JsonArray(QwandaUtils.apiGet(qwandaServiceUrl+"/qwanda/entityentitys/"+$m.data.getCode()+"/linkcodes/"+$m.getLinkCode(), tokenString));
         System.out.println("-----------------------------------");
         System.out.println("New EntityLinks : "+entityEntity.toString());
         System.out.println("-----------------------------------");
         //bus.publish("cmds", entityEntity);  
       
end
*/


rule "BucketView item movement - GRP_QUOTES to GRP_APPROVED"
  when
        $m : QEventLinkChangeMessage( event_type == "EVT_LINK_CHANGE" && (  (sourceBaseEntityCode == "GRP_QUOTES" && targetBaseEntityCode == "GRP_APPROVED")) )
        bus: EventBus()
        $map : Map($value: this["token"] != null)
    then
        System.out.println("-------- Rule:- BucketView Items Move GRP_QUOTES to GRP_APPROVED  --------");	  
		String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL")==null?System.getenv("REACT_APP_QWANDA_API_URL"):REACT_APP_QWANDA_API_URL;
  	    String tokenString = (String)$map.get("token");
		System.out.println("tokenstr="+StringUtils.abbreviateMiddle(tokenString, "...", 40));
		System.out.println("The Event Message received is: " +$m);
		System.out.println("The Source Code is: " +$m.getSourceBaseEntityCode());
	    System.out.println("The Target Code is: " +$m.getTargetBaseEntityCode());
		System.out.println("The Data Code (BEG code) is: " +$m.data.getCode());
	    System.out.println("The Data Value is: " +$m.data.getValue()); 
	    
	    String latLongs[] = QwandaUtils.getLatLong("121 Cardigan Street Carlton VIC 3053"); 
	    System.out.println("Latitude: "+latLongs[0]+" and Longitude: "+latLongs[1]);
	    GPS gpsLocation = new GPS($m.data.getCode(), latLongs[0], latLongs[1]);
        //GPS[] items = {gps1,gps2,gps3,gps4};
        
        String entryCode = $m.data.getCode()+"_ENTER";
        String exitCode = $m.data.getCode()+"_EXIT";
        QCmdGeofenceMessage cmdGeoFence = new QCmdGeofenceMessage(gpsLocation, 10.0, entryCode, exitCode);
         //Convert cmd to JSON Obj
        JsonObject cmdGeoFenceJson = new JsonObject().mapFrom(cmdGeoFence);
        System.out.println("-----------------------------------");
        System.out.println("Geo Fence Data Message : "+cmdGeoFenceJson.toString());
        System.out.println("-----------------------------------");
	    bus.publish("cmds", cmdGeoFenceJson); 
end



//Prevent skipping Groups
rule "BucketView Grp Change Invalid"
  when
        $m : QEventLinkChangeMessage( event_type == "EVT_LINK_CHANGE" && ( (sourceBaseEntityCode == "GRP_NO_QUOTES" && targetBaseEntityCode != "GRP_QUOTES") || (sourceBaseEntityCode == "GRP_QUOTES" && targetBaseEntityCode != "GRP_APPROVED") || (sourceBaseEntityCode == "GRP_APPROVED" && targetBaseEntityCode != "GRP_IN_TRANSIT") || (sourceBaseEntityCode == "GRP_IN_TRANSIT" && targetBaseEntityCode != "GRP_COMPLETED") || (sourceBaseEntityCode == "GRP_COMPLETED" && targetBaseEntityCode != "GRP_PAID") ))
        bus: EventBus()
        $map : Map($value: this["token"] != null)
    then
 	    System.out.println("-------- Rule:- BucketView transaction prevent Group skip --------");	  
		System.out.println("The Event Message received is: " +$m);
		System.out.println("The Data Code is: " +$m.data.getCode());
	    System.out.println("The Data Value is: " +$m.data.getValue());
	    System.out.println("Error! Its an invalid transaction.");
	    
	    QCmdMessage cmdAbort = new QCmdMessage("BV_MOVE", "ABORT");
        JsonObject data = new JsonObject();
          data.put("targetCode", $m.getSourceBaseEntityCode());
          data.put("dataCode", $m.data.getCode());    
        //Convert cmd to JSON Obj
        JsonObject abortCmd = new JsonObject().mapFrom(cmdAbort); 
          abortCmd.put("data", data);   
        System.out.println(" ##################### ");
        System.out.println("CMD Msg ="+abortCmd.toString()); 
        System.out.println(" #################### ");
        bus.publish("cmds", abortCmd);       
end


