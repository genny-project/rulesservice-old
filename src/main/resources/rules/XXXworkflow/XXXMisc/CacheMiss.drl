package com.sample;

import org.apache.commons.lang3.StringUtils;

import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QMessage.MessageData;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import io.vertx.rxjava.core.eventbus.EventBus;
import io.vertx.core.buffer.Buffer;
import com.google.gson.Gson;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.Ask;
import life.genny.qwanda.entity.BaseEntity;

import java.lang.reflect.Type;
import java.util.Map;
import java.util.Set;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.JsonPrimitive;
import com.google.gson.JsonSerializationContext;
import com.google.gson.FieldNamingPolicy;
import io.vertx.core.json.JsonObject;
import io.vertx.core.json.JsonArray;
import java.time.format.DateTimeFormatter;
import life.genny.qwanda.DateTimeDeserializer;
import life.genny.qwanda.entity.User;

// global java.lang.String REACT_APP_QWANDA_API_URL;
// global java.lang.String REACT_APP_VERTX_URL;
// global java.lang.String KEYCLOAKIP;

// global variables for color logs
global java.lang.String LOG_RESET;
global java.lang.String LOG_RED;
global java.lang.String LOG_GREEN;
global java.lang.String LOG_YELLOW;
global java.lang.String LOG_BLUE;
global java.lang.String LOG_PURPLE;
global java.lang.String LOG_CYAN;
global java.lang.String LOG_WHITE;
global java.lang.String LOG_BOLD;

    

rule "Cache Miss"

    when
        m : QEventMessage( QEventMessage.getEvent_type().equals("EVT_CACHE_MISS") )
        bus: EventBus()
        $map : Map($value: this["token"] != null)
        $map1 : Map($value1: this["realm"] != null)
        $roles : Set(!isEmpty())
        $user : User(uname!= null)
    then
        System.out.println("\n\n");
        System.out.println(LOG_YELLOW + "================================================================================================================================================" + LOG_RESET);
        System.out.println(LOG_GREEN + "RULE EXECUTED      ::   Cache Miss" + LOG_RESET);
        
        //Prepare Token & qwandaServiceUrl
        String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL");
        String tokenString = (String)$map.get("token");   
        //Get userCode for the given username
      
        System.out.println("\nToken          ::   " + StringUtils.abbreviateMiddle(tokenString,"...",40));
        System.out.println("Project Name   ::   " + $map1.get("realm") );       
        System.out.println("keycloak ID    ::   " +$map1.get("sub"));
		
		System.out.println("User facts value -  uname   ::   " +$user.getUname());
		System.out.println("User facts value -  Full Name   ::   " +$user.getFullName());
        System.out.println("User facts value -  Realm   ::   " +$user.getRealm());
        System.out.println("User facts value -  Roles   ::   " +$user.getRoles());
        
        System.out.println("------------------------------------------------------------------------");
          
        //Get BaseEntity with attributes
        JsonObject objWithAttr = new JsonObject(QwandaUtils.apiGet(qwandaServiceUrl+"/qwanda/baseentitys/"+m.getData().getCode()+"/attributes", tokenString));
        //Print the json Object  
        objWithAttr.put("token", $value);     
        System.out.println("------------------------------------------------------------------------");
        System.out.println("BE with ATTRIBUTE   ::   "+objWithAttr.toString()); 
        System.out.println("------------------------------------------------------------------------");            
        bus.publish("cmds", objWithAttr);   
       		      
end



