package life.genny.rules;

import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;

import life.genny.qwanda.Answer;

import life.genny.qwandautils.PaymentUtils;
import life.genny.qwandautils.PaymentEndpoint;
import life.genny.qwandautils.QwandaUtils;
import life.genny.rules.RulesUtils;
import life.genny.qwandautils.MergeUtil;

import com.google.gson.Gson;

import java.time.LocalDateTime;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import java.time.format.DateTimeFormatter;
import life.genny.qwanda.DateTimeDeserializer;

import java.util.Map;


rule "Create Payments Assembly Company"
	no-loop true
	when 
		rules: QRules(( isUserPresent() == true)  && isState("USER_CHECKED") && isState("IS_ASSEMBLY_USER_CREATED")) 
	then
		RulesUtils.header(drools.getRule().getName());
		
		String userName = rules.getAsString("preferred_username");
     	String userCode =  QwandaUtils.getBaseEntityCodeForUserName(userName, rules.getToken());
     	String tokenString = rules.getToken();
    	String qwandaServiceUrl = rules.getQwandaServiceUrl();
		
		Gson gson = new Gson();
     	GsonBuilder gsonBuilder = new GsonBuilder();
     	gsonBuilder.registerTypeAdapter(LocalDateTime.class, new DateTimeDeserializer());
     	gson = gsonBuilder.create();
		
		 /* get assembly authKey   */
    	String assemblyAuthToken = PaymentUtils.getAssemblyAuthKey();
     
     	/*  Gets assembly userId */
    	String assemblyId = MergeUtil.getAttrValue(userCode, "PRI_ASSEMBLY_USER_ID", tokenString);
     	
     	if(MergeUtil.getAttrValue(userCode, "PRI_ASSEMBLY_COMPANY_ID", tokenString) == null) {	
     	
     		RulesUtils.println("Company not found for user..So creating a Company now..");
     		RulesUtils.println("assembly ID ::"+assemblyId);
    		
     		if(assemblyId != null) {
				
				/* Create Assembly Company for user */
				String companyId = PaymentUtils.createCompany(assemblyId, assemblyAuthToken, tokenString);
		
				/* Save companyId as an attribute for the user */
				System.out.println("create payment company response -"+companyId);
		
				if(companyId != null) {
    	 			Answer assemblyIdAnswer = new Answer(userCode, userCode, "PRI_ASSEMBLY_COMPANY_ID", companyId);
    	 			QwandaUtils.apiPostEntity(qwandaServiceUrl+"/qwanda/answers",gson.toJson(assemblyIdAnswer), tokenString);
     				RulesUtils.println("Assembly Company created");
     				System.out.println("Assembly Company created");
     				
				}
			}
     	}
     	
     	rules.clearState("IS_ASSEMBLY_USER_CREATED");
    	update(rules);	
     			
		RulesUtils.footer(drools.getRule().getName());
end