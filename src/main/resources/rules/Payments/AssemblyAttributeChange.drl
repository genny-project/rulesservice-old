package com.sample;

import life.genny.qwanda.entity.User;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;

import life.genny.qwandautils.PaymentUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.MergeUtil;
import life.genny.qwandautils.RulesUtils;

import java.util.Map;


rule "Assembly user updation for attribute change"
    when
    	m : QDataAnswerMessage( QDataAnswerMessage.getData_type().equals(Answer.class.getSimpleName()) )
    	$user: User(realm != "memberhub" && (isAvailable == true && isProfileCompleted == true && isAssemblyUserProfileExists == true) )
        $map : Map($value: this["token"] != null)
    then    
		RulesUtils.header("Payments User Update Rule");
        
        String tokenString = (String)$map.get("token");   
        
        /* get assembly authKey   */
    	String assemblyAuthToken = PaymentUtils.getAssemblyAuthKey();
     
    	/*  Gets assembly userId */
    	String userCode = QwandaUtils.getBaseEntityCodeForUserName($user.getUname(),tokenString);
    	String assemblyId = MergeUtil.getAttrValue(userCode, "PRI_ASSEMBLY_USER_ID", tokenString);
    	String companyId = MergeUtil.getAttrValue(userCode, "PRI_ASSEMBLY_COMPANY_ID", tokenString);

        /* extract answers */
        Answer[] answers = m.getItems();
        for (Answer answer : answers) {
        
            Long askId = answer.getAskId();
            String sourceCode = answer.getSourceCode();
            String targetCode = answer.getTargetCode();
            answer.setSourceCode(answer.getTargetCode());
            String attributeCode = answer.getAttributeCode();
            String value = answer.getValue();

            RulesUtils.println("Printing Answer data recieved for Update in Assembly  ::");  
            RulesUtils.println("\nAskId: " +askId + "\nSource Code: " +sourceCode + "\nTarget Code: " +targetCode + "\nAttribute Code: " +attributeCode + "\nAttribute Value: " +value);
           
           	/* Updates assembly user profile */
        	String response = PaymentUtils.updateUserPersonalInfo(companyId, assemblyId, attributeCode, value, assemblyAuthToken);
        	RulesUtils.println("updated payments response ::"+response);
         } 
        
        RulesUtils.footer("Payment update rule");
end