package com.sample

import org.apache.commons.lang3.StringUtils;

import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QMessage.MessageData;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import io.vertx.rxjava.core.eventbus.EventBus;
import io.vertx.core.buffer.Buffer;
import com.google.gson.Gson;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.Ask;
import life.genny.qwanda.entity.BaseEntity;

import java.lang.reflect.Type;
import java.util.Map;
import java.util.Set;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.JsonPrimitive;
import com.google.gson.JsonSerializationContext;
import com.google.gson.FieldNamingPolicy;
import io.vertx.core.json.JsonObject;
import io.vertx.core.json.JsonArray;
import java.time.format.DateTimeFormatter;
import life.genny.qwanda.DateTimeDeserializer;
import life.genny.qwanda.entity.User;

rule "Make Offer"

    when
        $m : QEventMessage( event_type == "BTN_CLICK" && data.code == "BTN_MAKE_OFFER")
        bus: EventBus()
        $user: User(realm != null )
        $map : Map($value: this["token"] != null)
        $map1 : Map($value1: this["realm"] != null)
    then

    System.out.println("---------- Executing rule: CREATING AN OFFER ------------- ");
    String data = $m.getData().getValue();
	if(data != null) {

		JsonObject dataJson = new JsonObject(data);

		String hint = dataJson.getString("hint");
		String baseEntityCode = dataJson.getString("itemCode"); // BEG_X ....
        String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL")==null?System.getenv("REACT_APP_QWANDA_API_URL"):REACT_APP_QWANDA_API_URL;
        String tokenString = (String)$map.get("token");

		// base entity code is the job quote will be quoting on
		if(baseEntityCode != null) {

            System.out.println("---------- CREATING NEW OFFER  ------------- ");

            // We create a new OFR Base entity
            BaseEntity ofrBe = EBCHandlers.createBaseEntity(QwandaUtils.getUniqueId($user.getuCode(), null, "OFR", tokenString), "Offer", tokenString);
            System.out.println(ofrBe.toString());
            if(ofrBe != null) {

                String offerCode = ofrBe.getCode();
                System.out.println(offerCode);
                System.out.println(qwandaServiceUrl + "/qwanda/baseentitys/" + $user.getuCode() + "/asks2/QUE_OFFER_DETAILS_GRP/" + offerCode);

                // Load the question group for creation an offer
                //JsonObject qCreateOffer = new JsonObject(QwandaUtils.apiGet(qwandaServiceUrl + "/qwanda/baseentitys/" + $user.getuCode() + "/asks2/QUE_OFFER_DETAILS_GRP/" + offerCode, tokenString));
                //System.out.println(qCreateOffer.toString());
            }
		}
	}


end
