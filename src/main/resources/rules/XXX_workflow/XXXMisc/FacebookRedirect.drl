package com.sample;
 
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QCmdMessage;
import io.vertx.rxjava.core.eventbus.EventBus;
import io.vertx.core.buffer.Buffer;
import com.google.gson.Gson;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QEventAttributeValueChangeMessage;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.Ask;

import java.lang.reflect.Type;
import java.util.Map;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.JsonPrimitive;
import com.google.gson.JsonSerializationContext;
import com.google.gson.FieldNamingPolicy;
import io.vertx.core.json.JsonObject;
import java.time.format.DateTimeFormatter;
import life.genny.qwanda.DateTimeDeserializer;

global java.lang.String REACT_APP_QWANDA_API_URL;
global java.lang.String REACT_APP_VERTX_URL;
global java.lang.String KEYCLOAKIP;

// global variables for color logs
global java.lang.String LOG_RESET;
global java.lang.String LOG_RED;
global java.lang.String LOG_GREEN;
global java.lang.String LOG_YELLOW;
global java.lang.String LOG_BLUE;
global java.lang.String LOG_PURPLE;
global java.lang.String LOG_CYAN;
global java.lang.String LOG_WHITE;
global java.lang.String LOG_BOLD;
   
rule "Facebook Redirect"
  when
    $m : QEventMessage( event_type == "BTN_CLICK" && data.code == "QUE_FB_BASIC")
    bus: EventBus()
    $map : Map($value: this["token"] != null)
  then
    System.out.println(LOG_YELLOW + "================================================================================================================================================" + LOG_RESET);
    System.out.println(LOG_GREEN + "RULE EXECUTED      ::   SOCIAL REDIRECT EXECUTED" + LOG_RESET);
  
  	  //Prepare Token & qwandaServiceUrl
    String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL");
    String tokenString = (String)$map.get("token");   

    String clientId= "423902461306952";
    String clientSecret= "a7bd50640f9914b95756ae8f5680751b";
    String redirectUrl= "https://www.facebook.com/v2.8/dialog/oauth?response_type=code";
    	
    	JsonObject data = new JsonObject($m.getData().getValue());
    String askId = data.getInteger("askId").toString();
    System.out.println("Ask ID   ::   "+askId);

    JsonObject ask = new JsonObject(QwandaUtils.apiGet(qwandaServiceUrl+"/qwanda/asks/"+askId, tokenString));
    System.out.println("This is the ask   ::   " +ask.toString());

    ask.put("clientId", clientId);
    ask.put("clientSecret", clientSecret);
    ask.put("redirectUrl", redirectUrl);  
    ask.put("sourceCode", "SOC_FB_BASIC");
    ask.put("askId", askId);

    System.out.println("------------------------------------------------------------------------\n");
    System.out.println("Ask with Redirect DATA" +ask.toString());
    System.out.println("------------------------------------------------------------------------");		
    
    JsonObject obj = new JsonObject();
    obj.put("msg_type", "DATA_MSG");
    obj.put("data_type", "SOCIAL_REDIRECT");
    obj.put("items", ask);  
    obj.put("token", $value);       
    bus.publish("cmds", obj); 
end

rule "Send Facebook Friend List"
  when
    $m : QEventMessage( event_type == "SEND_FB_FRIENDS")
    bus: EventBus()
    $map : Map($value: this["token"] != null)
    $user: User(realm != null)
  then
  	System.out.println(LOG_YELLOW + "================================================================================================================================================" + LOG_RESET);
    System.out.println(LOG_GREEN + "RULE EXECUTED      ::   Send Facebook Friend List" + LOG_RESET);

    //Prepare Token & qwandaServiceUrl
    String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL");
    String tokenString = (String)$map.get("token");   
    
    
    //Getting PER_USER1 BE and it's attributes
    JsonObject user = new JsonObject(QwandaUtils.apiGet(qwandaServiceUrl +"/qwanda/baseentitys/GRP_PEOPLE/linkcodes/LNK_CORE/attributes?PRI_USERNAME=" + $user.getUname(), tokenString));
    System.out.println("------------------------------------------------------------------------\n");
    System.out.println("USER BASEENTITY   ::   "+user.toString());  
    System.out.println("------------------------------------------------------------------------");
    user.put("token", $value);
    bus.publish("cmds", user);
       
    //  //Getting all Facebook Friends and their attributes
    // JsonObject friendList = new JsonObject(QwandaUtils.apiGet(qwandaServiceUrl +"/qwanda/baseentitys/PER_USER1/linkcodes/LNK_FRIEND/attributes", tokenString));
    // System.out.println("------------------------------------------------------------------------\n");
    // System.out.println("FACEBOOK FRIEND LIST   ::   "+friendList.toString());  
    // System.out.println("------------------------------------------------------------------------");
    // friendList.put("token", $value);
    // bus.publish("cmds", friendList);

     //Getting all Facebook Friends and their attributes
    JsonObject friendList = new JsonObject(QwandaUtils.apiGet(qwandaServiceUrl +"/qwanda/baseentitys/"+$user.getuCode()+"/linkcodes/LNK_FRIEND/attributes", tokenString));
    System.out.println("------------------------------------------------------------------------\n");
    System.out.println("FACEBOOK FRIEND LIST   ::   "+friendList.toString());  
    System.out.println("------------------------------------------------------------------------");
    friendList.put("token", $value);
    bus.publish("cmds", friendList);
    
    System.out.println( "\n" + LOG_RED + "RULE TERMINATED    ::   Send Facebook Friend List" + LOG_RESET);
    System.out.println(LOG_YELLOW + "------------------------------------------------------------------------------------------------------------------------------------------------" + LOG_RESET); 
end

