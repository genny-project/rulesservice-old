// package com.sample;

// import life.genny.qwanda.message.QEventMessage;
// import life.genny.qwanda.message.QCmdMessage;
// import life.genny.qwanda.message.QMSGMessage;
// import life.genny.qwanda.message.QBaseMSGMessageType;
// import life.genny.qwanda.message.QMessage.MessageData;
// import io.vertx.rxjava.core.eventbus.EventBus;
// import io.vertx.core.json.JsonObject;
// import java.util.Map;

// import life.genny.qwandautils.QwandaUtils;
// import life.genny.qwanda.message.QCmdMessage;


// rule "MsgCommTest-SMS"
//     when
//         $m : QEventMessage( event_type == "BTN_CLICK" && data.code == "QUE_TEST_COMMS_SEND_SMS" )
//         bus: EventBus()
//         $map : Map($value: this["token"] != null)
//     then
//         System.out.println(LOG_YELLOW + "================================================================================================================================================" + LOG_RESET);
//         System.out.println(LOG_GREEN + "RULE EXECUTED      ::   Msg Comm Test SMS BTN CLICK" + LOG_RESET);
//         String tokenString = (String)$map.get("token");
//         /* QMSGMessage(String msg_type, QBaseMSGMessageType msgMessageType, String code,String[] attachments) */
//         QMSGMessage msgMessage = new QMSGMessage("MSG_MESSAGE", QBaseMSGMessageType.SMS, "TST_COMMS", null); 	
//  	 	JsonObject jsonMessage = new JsonObject().mapFrom(msgMessage);
//  		jsonMessage.put("token",tokenString);
//         System.out.println("sms Message:" + jsonMessage);
//         bus.publish("messages", jsonMessage);       
//         System.out.println( "\n" + LOG_RED + "RULE TERMINATED    ::   Msg Comm Test SMS BTN CLICK" + LOG_RESET);
//         System.out.println(LOG_YELLOW + "------------------------------------------------------------------------------------------------------------------------------------------------" + LOG_RESET);        
// end

