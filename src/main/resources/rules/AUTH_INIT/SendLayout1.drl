package com.sample;

import org.apache.commons.lang3.StringUtils;

import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QMessage.MessageData;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import io.vertx.rxjava.core.eventbus.EventBus;
import io.vertx.core.buffer.Buffer;
import com.google.gson.Gson;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.Ask;
import life.genny.qwanda.entity.BaseEntity;

import java.lang.reflect.Type;
import java.util.Map;
import java.util.Set;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.JsonPrimitive;
import com.google.gson.JsonSerializationContext;
import com.google.gson.FieldNamingPolicy;
import io.vertx.core.json.JsonObject;
import io.vertx.core.json.JsonArray;
import java.time.format.DateTimeFormatter;
import life.genny.qwanda.DateTimeDeserializer;
import life.genny.qwanda.entity.User;
import life.genny.qwanda.Link;

// global variables for color logs
global java.lang.String LOG_RESET;
global java.lang.String LOG_RED;
global java.lang.String LOG_GREEN;
global java.lang.String LOG_YELLOW;
global java.lang.String LOG_BLUE;
global java.lang.String LOG_PURPLE;
global java.lang.String LOG_CYAN;
global java.lang.String LOG_WHITE;
global java.lang.String LOG_BOLD;


rule "Send layout1"
     salience 8
     agenda-group "layout"
     when
       bus: EventBus()
       //$user: User(realm != "memberhub" )
       $user: User(realm != "memberhub" && (isAvailable == true) )
       $map : Map($value: this["token"] != null)
     then
        System.out.println(LOG_YELLOW + "================================================================================================================================================" + LOG_RESET);
        System.out.println(LOG_GREEN + "RULE EXECUTED      ::   Genny Layout" + LOG_RESET);
        System.out.println(LOG_GREEN+ "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@" + LOG_RESET);
        System.out.println(LOG_GREEN+ "@@@                                                               @@@" + LOG_RESET);
        System.out.println(LOG_GREEN+ "@@@                    GENNY LAYOUT                               @@@" + LOG_RESET);
        System.out.println(LOG_GREEN+ "@@@                                                               @@@" + LOG_RESET);
        System.out.println(LOG_GREEN+ "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@" + LOG_RESET);

         //Prepare Token & qwandaServiceUrl
        String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL");
        String tokenString = (String)$map.get("token");   
        System.out.println("\nToken   ::   " + StringUtils.abbreviateMiddle(tokenString,"...",40));
        //Get Genny Layout
        String layout = QwandaUtils.apiGet("https://raw.githubusercontent.com/genny-project/layouts/master/layouts/layout1.json", null);
        
        QCmdMessage cmd = new QCmdMessage("CMD_LAYOUT","layout1");
        JsonObject layoutObj = new JsonObject().mapFrom(cmd);
        layoutObj.put("msg_type", "CMD_MSG");
        layoutObj.put("cmd_type", "CMD_LAYOUT");
        layoutObj.put("code", "layout1");
        layoutObj.put("data", new JsonObject(layout));
		layoutObj.put("token", $value);
        System.out.println("------------------------------------------------------------------------\n");
        System.out.println("GENNY LAYOUT   ::   "+layoutObj.toString());
        System.out.println("------------------------------------------------------------------------");
        bus.publish("cmds", layoutObj);

        System.out.println( "\n" + LOG_RED + "RULE TERMINATED    ::   Genny Layout" + LOG_RESET);
        System.out.println(LOG_YELLOW + "------------------------------------------------------------------------------------------------------------------------------------------------" + LOG_RESET);
end
