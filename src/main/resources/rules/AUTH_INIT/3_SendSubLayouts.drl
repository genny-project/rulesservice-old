package life.genny.rules;

import life.genny.qwandautils.RulesUtils;
import life.genny.rules.QRules;

import life.genny.qwandautils.QwandaUtils;


import io.vertx.core.json.JsonObject;
import io.vertx.core.json.JsonArray;


rule "Send Sub Layouts To Frontend"
    no-loop true
    when
        rules: QRules( isState("IS_LOGGED_IN")) 
     then
     	RulesUtils.header(drools.getRule().getName());
     	
      	/*  Send all sublayouts for entities  */
  		RulesUtils.header( "Send initial sublayouts");  
  
  		String subLayoutMap = QwandaUtils.apiGet("https://api.github.com/repos/genny-project/layouts/contents/sublayouts", null);
		if(subLayoutMap != null) {
		
			JsonArray subLayouts = new JsonArray(subLayoutMap);
			if(subLayouts != null) {
				
				for(int i = 0; i < subLayouts.size(); i++) {
				
				  		QCmdMessage layoutCmd = new QCmdLayoutMessage("layout1",layout);
     					String layout = QwandaUtils.apiGet("https://raw.githubusercontent.com/genny-project/layouts/master/layouts/layout1.json", null);
  		
        					rules.publishCmd(layoutCmd);
					
					JsonObject sublayoutData = subLayouts.getJsonObject(i);
					String url = sublayoutData.getString("download_url");
					String name = sublayoutData.getString("name");
					name = name.replace(".json", "");
					name = name.replaceAll("\"", "");
					
					if(url != null) {
						
						/*  grab sublayout from github */
						String subLayoutString = QwandaUtils.apiGet(url, null);
						if(subLayoutString != null) {
							
							try {
								
								// send sublayout to FE 
								JsonObject sublayout = new JsonObject(subLayoutString);
								JsonObject subLayoutObj = new JsonObject();
						        subLayoutObj.put("msg_type", "DATA_MSG");
						        subLayoutObj.put("data_type", "SUB_LAYOUT");
						        subLayoutObj.put("code", name);
						        subLayoutObj.put("items", sublayout);      
								subLayoutObj.put("token", rules.getToken());
								
							        rules.publish("cmds", subLayoutObj);
						        
							}
							catch(Exception e) {
							} 
						}
					}
				}
			}
		}
		
	    RulesUtils.footer(drools.getRule().getName());       		      
end
