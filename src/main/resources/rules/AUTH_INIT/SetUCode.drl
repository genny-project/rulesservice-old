package com.sample;

import org.apache.commons.lang3.StringUtils;

import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QMessage.MessageData;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import io.vertx.rxjava.core.eventbus.EventBus;
import io.vertx.core.buffer.Buffer;
import com.google.gson.Gson;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.Ask;
import life.genny.qwanda.entity.BaseEntity;

import java.lang.reflect.Type;
import java.util.Map;
import java.util.Set;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.JsonPrimitive;
import com.google.gson.JsonSerializationContext;
import com.google.gson.FieldNamingPolicy;
import io.vertx.core.json.JsonObject;
import io.vertx.core.json.JsonArray;
import java.time.format.DateTimeFormatter;
import life.genny.qwanda.DateTimeDeserializer;
import life.genny.qwanda.entity.User;
import life.genny.qwanda.Link;

// global java.lang.String REACT_APP_QWANDA_API_URL;
// global java.lang.String REACT_APP_VERTX_URL;
// global java.lang.String KEYCLOAKIP;

// global variables for color logs
global java.lang.String LOG_RESET;
global java.lang.String LOG_RED;
global java.lang.String LOG_GREEN;
global java.lang.String LOG_YELLOW;
global java.lang.String LOG_BLUE;
global java.lang.String LOG_PURPLE;
global java.lang.String LOG_CYAN;
global java.lang.String LOG_WHITE;
global java.lang.String LOG_BOLD;

    

rule "Set Ucode"
  salience 20
  no-loop true
   agenda-group "UserRegistration"
   when
     $user: User( uCode == null and false)
     $map : Map($value: this["token"] != null) 
   then
     System.out.println(LOG_YELLOW + "================================================================================================================================================" + LOG_RESET);
     System.out.println(LOG_GREEN + "RULE EXECUTED      ::   Set User Code  " + LOG_RESET);
     //Prepare Token & qwandaServiceUrl
     String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL");
     String tokenString = (String)$map.get("token"); 
     System.out.println("The User Code before setting value  :: " +$user.getuCode());
      modify($user){
           setuCode(QwandaUtils.getBaseEntityCodeForUserName($user.getUname(), tokenString));
        }
     System.out.println("The User Code after setting value  :: " +$user.getuCode()); 
end   