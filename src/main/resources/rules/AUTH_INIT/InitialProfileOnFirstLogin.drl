package com.sample;

import org.apache.commons.lang3.StringUtils;

import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QMessage.MessageData;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import io.vertx.rxjava.core.eventbus.EventBus;
import io.vertx.core.buffer.Buffer;
import com.google.gson.Gson;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.Ask;
import life.genny.qwanda.entity.BaseEntity;

import java.lang.reflect.Type;
import java.util.Map;
import java.util.Set;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.JsonPrimitive;
import com.google.gson.JsonSerializationContext;
import com.google.gson.FieldNamingPolicy;
import io.vertx.core.json.JsonObject;
import io.vertx.core.json.JsonArray;
import java.time.format.DateTimeFormatter;
import life.genny.qwanda.DateTimeDeserializer;
import life.genny.qwanda.entity.User;
import life.genny.qwanda.Link;

/* global variables for color logs */
global java.lang.String LOG_RESET;
global java.lang.String LOG_RED;
global java.lang.String LOG_GREEN;
global java.lang.String LOG_YELLOW;
global java.lang.String LOG_BLUE;
global java.lang.String LOG_PURPLE;
global java.lang.String LOG_CYAN;
global java.lang.String LOG_WHITE;
global java.lang.String LOG_BOLD;

rule "Send initial-profile-update layout for first login"
    salience 17
    agenda-group "UserRegistration"
    when
      bus: EventBus()
      $user: User(isProfileCompleted == false && realm != "memberhub")
      $map : Map($value: this["token"] != null)
     then
       System.out.println(LOG_YELLOW + "================================================================================================================================================" + LOG_RESET);
       System.out.println(LOG_GREEN + "RULE EXECUTED      ::   Send Initial Profile Update Layout" + LOG_RESET);

        /* Prepare Token & qwandaServiceUrl */
        String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL");
        String tokenString = (String)$map.get("token"); 
       /* Sending USER Profile Asks */
       System.out.println("User uCode = "+$user.getuCode());
      JsonObject obj = new JsonObject(QwandaUtils.apiGet(qwandaServiceUrl+"/qwanda/baseentitys/"+$user.getuCode()+"/asks2/QUE_NEW_USER_PROFILE_GRP/"+$user.getuCode(), tokenString));
      System.out.println("*******************");
      System.out.println("Json="+obj.toString());	
      System.out.println("*******************");	
	  obj.put("token", $value);					
	  bus.publish("cmds", obj);
           
      /* Get initial-profile-update sub layout */
      String layout = QwandaUtils.apiGet("https://raw.githubusercontent.com/genny-project/layouts/master/layouts/initial-profile-update", null);
      QCmdMessage cmdLayout = new QCmdMessage("CMD_LAYOUT","profile-update");
      JsonObject layoutObj = new JsonObject().mapFrom(cmdLayout);
      layoutObj.put("data", new JsonObject(layout));
      layoutObj.put("token", $value);
      System.out.println("------------------------------------------------------------------------\n");
      System.out.println("PROFILE UPDATE LAYOUT   ::   "+layoutObj.toString());
      System.out.println("------------------------------------------------------------------------");
      bus.publish("cmds", layoutObj);
  
       /* sending cmd form view  */
      String subLayout = QwandaUtils.apiGet("https://raw.githubusercontent.com/genny-project/layouts/master/welcome-new-user", null);
      QCmdMessage cmdSublayout = new QCmdMessage("CMD_SUBLAYOUT","welcomeNewUser");
      /* Convert cmd to JSON Obj */
      JsonObject cmdSubLayout = new JsonObject().mapFrom(cmdSublayout);
      cmdSubLayout.put("items", new JsonObject(subLayout));
      /* cmdObj.put("root", "QUE_USER_PROFILE_GRP"); */
      /* cmdObj.put("data", "itemsPerPage:8");    */    
      System.out.println(" ##################### ");
      System.out.println("Sub-layout  = "+cmdSubLayout.toString()); 
      System.out.println(" #################### ");
      cmdSubLayout.put("token", $value);
      /* Publish it to the EventBus */
      bus.publish("cmds", cmdSubLayout);
       
       
      System.out.println("Available value after creating user     ::    " +$user.getIsAvailable());
      System.out.println("isProfileCompleted value after creating user     ::    " +$user.getIsProfileCompleted()); 
       
       System.out.println( "\n" + LOG_RED + "RULE TERMINATED    ::   Send Initial Profile Update Layout" + LOG_RESET);
       System.out.println(LOG_YELLOW + "------------------------------------------------------------------------------------------------------------------------------------------------" + LOG_RESET);    
      
 end
