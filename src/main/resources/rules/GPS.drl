package life.genny.rules;

import life.genny.qwandautils.RulesUtils;
import life.genny.rules.QRules;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.GPS;
import io.vertx.rxjava.core.eventbus.EventBus;
import io.vertx.core.json.JsonObject;
import io.vertx.core.json.JsonArray;
import java.util.Map;
import java.util.List;
import com.google.gson.GsonBuilder;
import java.util.ArrayList;

import life.genny.qwanda.message.QDataGPSMessage;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.RulesUtils;

import life.genny.qwanda.Answer;

rule "Receive GPS Data"
	
    when
	    m : QDataGPSMessage()
	    rules: QRules()
     then
     	
     	RulesUtils.header(drools.getRule().getName());
     	
				
        BaseEntity user = rules.getUser();
        
        /* Get Jobs in transit */
        /* http://localhost:8280/qwanda/baseentitys/GRP_IN_TRANSIT/linkcodes/LNK_CORE
         * 
         */
        
        GPS driverPosition = m.getItems()[0];
	    	String driverLatitude = driverPosition.getLatitude();
	    	String driverLongitude = driverPosition.getLongitude();
        List<BaseEntity> jobsInTransit = rules.getBaseEntitysByAttributeAndValue("STT_IN_TRANSIT", rules.getUser().getCode());
 		RulesUtils.println(jobsInTransit.toString());
 			
 		for(BaseEntity be: jobsInTransit) {
 			
 			/* get delivery location for BEG */
 			
 			/* Call Google Maps API to know how far the driver is */
 			String response = QwandaUtils.apiGet("https://maps.googleapis.com/maps/api/distancematrix/json?origins=" + driverLatitude + "," + driverLongitude + "&destinations=-37.8021691,144.9664282&mode=driving&language=pl-PL", null);
 			System.out.println(response);
 			if(response != null) {
 				
 				JsonObject distanceMatrix = new JsonObject(response);
 				JsonArray elements = distanceMatrix.getJsonArray("rows").getJsonObject(0).getJsonArray("elements");
 				JsonObject distance = elements.getJsonObject(0).getJsonObject("distance");
 				int distanceValue = distance.getInteger("value");
 				System.out.println("===");
 				System.out.println(distance.getInteger("value"));
 				System.out.println(distanceValue);
 				
 				double d = (double)distanceValue;
 				double percent = 100 * (( d / 1000.0 * 100.0) / 0.4);
 				
 				Answer updateProgressAnswer = new Answer(be.getCode(), be.getCode(), "PRI_PROGRESS", Double.toString(percent));
 				RulesUtils.println(updateProgressAnswer);
 				
	            String jsonBeUpdate = RulesUtils.toJson(updateProgressAnswer);
	            RulesUtils.println("Answer Json String:"+jsonBeUpdate);
	            QwandaUtils.apiPostEntity(rules.getQwandaServiceUrl()+"/qwanda/answers", jsonBeUpdate, rules.getToken());
 			}
 		}
 		
	    RulesUtils.footer(drools.getRule().getName());       
	    	
end
