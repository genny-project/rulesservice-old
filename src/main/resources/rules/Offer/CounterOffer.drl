package com.sample;

import org.apache.commons.lang3.StringUtils;

import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QMessage.MessageData;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import io.vertx.rxjava.core.eventbus.EventBus;
import io.vertx.core.buffer.Buffer;
import com.google.gson.Gson;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.MessageUtils;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.Ask;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.message.QMSGMessage;
import life.genny.qwanda.message.QBaseMSGMessageType;

import java.lang.reflect.Type;
import java.util.Map;
import java.util.Set;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.JsonPrimitive;
import com.google.gson.JsonSerializationContext;
import com.google.gson.FieldNamingPolicy;
import io.vertx.core.json.JsonObject;
import io.vertx.core.json.JsonArray;
import java.time.format.DateTimeFormatter;
import life.genny.qwanda.DateTimeDeserializer;
import life.genny.qwanda.entity.User;
import life.genny.qwanda.Link;

rule "Counter Offer"

    when
        $m : QEventMessage( event_type == "BTN_CLICK" && data.code == "BTN_COUNTER_OFFER")
        bus: EventBus()
        $user: User(realm != null )
        $map : Map($value: this["token"] != null)
        $map1 : Map($value1: this["realm"] != null)
    then

        System.out.println(QwandaUtils.executeRuleLogger("Counter Offer"));
        /* Prepare Token & qwandaServiceUrl */
        String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL");
        String tokenString = (String)$map.get("token");   
        
        /* retrieve jsonObj's values sent on data.value */
        String data = $m.getData().getValue();
        if(data != null) {

            JsonObject dataJson = new JsonObject(data);
            String offerCode = dataJson.getString("itemCode"); /* OFR_X .... */
            String hint = dataJson.getString("hint");
            
            System.out.println("OFFER CODE   ::   "+offerCode);
            System.out.println("HINT         ::   "+hint);
            
            /*get OFFER QUESTION GROUP */
            JsonObject offerGrp = new JsonObject(QwandaUtils.apiGet(qwandaServiceUrl + "/qwanda/baseentitys/" + $user.getuCode() + "/asks2/QUE_OFFER_DETAILS_GRP/" + offerCode, tokenString));
            System.out.println("------------------------------------------------------------------------");
            System.out.println("OFFER QUESTION GROUP   ::   "+ offerGrp.toString());	
            System.out.println("------------------------------------------------------------------------");	
            
            /* publish QUESTIONS */
            offerGrp.put("token", tokenString);					
            bus.publish("cmds",  offerGrp);              
            
        }
        System.out.println(QwandaUtils.terminateRuleLogger("Counter Offer"));
end
