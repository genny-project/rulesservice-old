package com.sample
 
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QCmdMessage;
import io.vertx.rxjava.core.eventbus.EventBus;
import io.vertx.core.buffer.Buffer;
import com.google.gson.Gson;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.Ask;

import java.lang.reflect.Type;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.JsonPrimitive;
import com.google.gson.JsonSerializationContext;
import com.google.gson.FieldNamingPolicy;
import io.vertx.core.json.JsonObject;
import java.time.format.DateTimeFormatter;
import life.genny.qwanda.DateTimeDeserializer;

global java.lang.String REACT_APP_QWANDA_API_URL;
global java.lang.String REACT_APP_VERTX_URL;
global java.lang.String KEYCLOAKIP;
   
//TreeView element EXPAND
rule "Expand TreeView Item"
  when
        $m : QEventMessage( event_type == "TV_EXPAND" && data.code == "TV1" )
        bus: EventBus()
        $map : Map($value: this["token"] != null)
    then
 	    System.out.println("-------- Rule:- EXPAND TreeView Items --------");
	    String keycloakIP = System.getenv("HOSTIP")!=null?System.getenv("HOSTIP"): "localhost";
		String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL")==null?System.getenv("REACT_APP_QWANDA_API_URL"):REACT_APP_QWANDA_API_URL;
 		System.out.println("HOSTIP:"+keycloakIP+" ,qwandaUrl="+qwandaServiceUrl);
  	    String tokenString = (String)$map.get("token");
		System.out.println("tokenstr="+tokenString);
        JsonObject obj = new JsonObject(QwandaUtils.apiGet(qwandaServiceUrl+"/qwanda/baseentitys/"+$m.getData().getValue()+"/linkcodes/LNK_CORE", tokenString));
		
		System.out.println("*******************");
		System.out.println("Json="+obj.toString());	
		System.out.println("*******************");						
		bus.publish("cmds", obj);
end


//Treeview element CONTRACT
rule "Contract TreeView Items"
    when
        $m : QEventMessage( event_type == "TV_CONTRACT" && data.code == "TV1" )
        bus: EventBus()
        $map : Map($value: this["token"] != null)
       //$map1 : Map($value1: this["iss"] != null)
    then
 	    System.out.println("-------- Rule:- CONTRACT TreeView Items --------");
  	    String tokenString = (String)$map.get("token");
		System.out.println("tokenstr="+tokenString);
		JsonObject obj = new JsonObject();
		obj.put("msg_type", "CMD_MSG");
		obj.put("cmd_type", "TV_CONTRACT");
		obj.put("code", $m.getData().getValue());		
		System.out.println("*******************");
		System.out.println("Json="+obj.toString());	
		System.out.println("*******************");						
		bus.publish("cmds", obj);       
end


/*
//Treeview item selection Rules
rule "Select TreeView Item: DASHBOARD"
     when
        $m : QEventMessage( event_type == "TV_SELECT" && data.code == "TV1" && data.value == "GRP_DASHBOARD" )
        bus: EventBus()
        $map : Map($value: this["token"])
    then
 	    System.out.println("-------- Rule:- SELECT TreeView Items --------");	
		//Getting QwandaService URL
		String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL")==null?System.getenv("REACT_APP_QWANDA_API_URL"):REACT_APP_QWANDA_API_URL;
 		//Getting token String
  	    String tokenString = (String)$map.get("token");
		System.out.println("tokenstr="+tokenString);
		
		//Base Entity to be displayed in the table as header
		JsonObject baseEntity = new JsonObject(QwandaUtils.apiGet(qwandaServiceUrl+"/qwanda/baseentitys/GRP_DRIVER_VIEW/linkcodes/LNK_CORE", tokenString));
		System.out.println("*******************");
		System.out.println("Json="+baseEntity.toString());	
		System.out.println("*******************");						
		bus.publish("cmds", baseEntity);	 
		
		//Sending layout cmd
	    QCmdMessage cmd = new QCmdMessage("CMD_LAYOUT","layout1");
		JsonObject obj = new JsonObject().mapFrom(cmd);	
		System.out.println("*******************");
		System.out.println("Json="+obj.toString());	
		System.out.println("*******************");						
		bus.publish("cmds", obj);  
				  
end
*/

rule "Select TreeView Item: GRP_USERS"
    when
        $m : QEventMessage( event_type == "TV_SELECT" && data.code == "TV1" && data.value == "GRP_USERS" )
        bus: EventBus()
        $map : Map($value: this["token"] != null)
    then
 	    System.out.println("-------- Rule:- SELECT TreeView Items --------");		
		
		//sending cmd view 
        QCmdMessage cmd = new QCmdMessage("CMD_VIEW","TABLE_VIEW");
        //Convert cmd to JSON Obj
        JsonObject cmdObj = new JsonObject().mapFrom(cmd);
          
          cmdObj.put("data", "itemsPerPage:5");        
        System.out.println(" ##################### ");
        System.out.println("Layout Data ="+cmdObj.toString()); 
        System.out.println(" #################### ");
        //Publish it to the EventBus
        bus.publish("cmds", cmdObj); 
				
 		//Getting token String
  	    String tokenString = (String)$map.get("token");
		System.out.println("tokenstr="+tokenString);
		
		//Getting QwandaService URL
		String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL")==null?System.getenv("REACT_APP_QWANDA_API_URL"):REACT_APP_QWANDA_API_URL;

        //Getting all BaseEntity and their attributes
        JsonObject users = new JsonObject(QwandaUtils.apiGet(qwandaServiceUrl +"/qwanda/baseentitys/GRP_USERS/linkcodes/LNK_CORE/attributes?pageStart=0&pageSize=20", tokenString));
		System.out.println("*******************");
		System.out.println("Json="+users.toString());	
		System.out.println("*******************");
		//Publishing DATA_MSG to the Event Bus with datas to be displayed in the table 						
		bus.publish("cmds", users);
end

/*
//TreeView item selection/click rule
rule "Select TreeView Item"
    when
        $m : QEventMessage( event_type == "TV_SELECT" && data.code == "TV1" )
        bus: EventBus()
        $map : Map($value: this["token"])
    then
 	    System.out.println("-------- Rule:- SELECT TreeView Items --------");		
		QCmdMessage cmd = new QCmdMessage("CMD_LAYOUT","layout1");
		JsonObject obj = new JsonObject().mapFrom(cmd);	
		System.out.println("*******************");
		System.out.println("Json="+obj.toString());	
		System.out.println("*******************");						
		bus.publish("cmds", obj);  
		
		//Getting QwandaService URL
		String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL")==null?System.getenv("REACT_APP_QWANDA_API_URL"):REACT_APP_QWANDA_API_URL;
 		//Getting token String
  	    String tokenString = (String)$map.get("token");
		System.out.println("tokenstr="+tokenString);
		
		//Base Entity to be displayed in the table as header
		JsonObject baseEntity = new JsonObject(QwandaUtils.apiGet(qwandaServiceUrl+"/qwanda/baseentitys/"+$m.getData().getValue()+"/linkcodes/LNK_CORE?pageStart=0&pageSize=200", tokenString));
		System.out.println("*******************");
		System.out.println("Json="+baseEntity.toString());	
		System.out.println("*******************");						
		bus.publish("cmds", baseEntity);	 
				  
end
*/

/*
rule "Select TreeView Items for child items"
     when
        $m : QEventMessage( event_type == "TV_SELECT" && data.code == "TV1" && data.value != "GRP_DASHBOARD" && data.value != "GRP_LOADS" && data.value != "GRP_CONTACTS" 
                     && data.value != "GRP_SETTINGS" )
        bus: EventBus()
        $map : Map($value: this["token"])
    then
 	    System.out.println("-------- Rule:- SELECT TreeView Items --------");		
		QCmdMessage cmd = new QCmdMessage("CMD_LAYOUT","TABLE_VIEW");
		JsonObject obj = new JsonObject().mapFrom(cmd);	
		System.out.println("*******************");
		System.out.println("Json="+obj.toString());	
		System.out.println("*******************");						
		bus.publish("cmds", obj);  
		
		//Getting QwandaService URL
		String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL")==null?System.getenv("REACT_APP_QWANDA_API_URL"):REACT_APP_QWANDA_API_URL;
 		//Getting token String
  	    String tokenString = (String)$map.get("token");
		System.out.println("tokenstr="+tokenString);
		
		//Base Entity to be displayed in the table as header
		JsonObject baseEntity = new JsonObject(QwandaUtils.apiGet(qwandaServiceUrl+"/qwanda/baseentitys/"+$m.getData().getValue()+"/linkcodes/LNK_CORE?pageStart=0&pageSize=200", tokenString));
		System.out.println("*******************");
		System.out.println("Json="+baseEntity.toString());	
		System.out.println("*******************");						
		bus.publish("cmds", baseEntity);	 
				  
end

*/
//Asks rules
rule "asks for TreeView-YOUR_DETAILS click"
    when
        $m : QEventMessage( event_type == "TV_SELECT" && data.code == "TV1"  && data.value == "GRP_YOUR_DETAILS" )
        bus: EventBus()
        $map : Map($value: this["token"] != null)
    then
 	    System.out.println("------- EXPAND GRP_YOUR_DETAILS RULE --------");
		String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL")==null?System.getenv("REACT_APP_QWANDA_API_URL"):REACT_APP_QWANDA_API_URL;
  	    String tokenString = (String)$map.get("token");
		System.out.println("tokenstr="+tokenString);
        JsonObject obj = new JsonObject(QwandaUtils.apiGet(qwandaServiceUrl+"/qwanda/asksmsg", tokenString));
		
		System.out.println("*******************");
		System.out.println("Json="+obj.toString());	
		System.out.println("*******************");						
		bus.publish("cmds", obj);
end  
