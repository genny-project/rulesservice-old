// package life.genny.rules;

// import life.genny.rules.RulesUtils;
// import life.genny.rules.QRules;

// import org.apache.commons.lang3.StringUtils;

// import life.genny.qwanda.message.QEventMessage;
// import life.genny.qwanda.message.QMessage.MessageData;
// import life.genny.qwanda.message.QCmdMessage;
// import io.vertx.rxjava.core.eventbus.EventBus;
// import io.vertx.core.buffer.Buffer;
// import com.google.gson.Gson;
// import life.genny.qwanda.Answer;
// import life.genny.qwanda.message.QDataAnswerMessage;
// import life.genny.qwanda.message.QEventAttributeValueChangeMessage;
// import life.genny.qwandautils.KeycloakUtils;
// import life.genny.qwandautils.MergeUtil;
// import life.genny.qwandautils.QwandaUtils;
// import life.genny.qwandautils.MergeUtil;
// import life.genny.qwanda.message.QDataAskMessage;
// import life.genny.qwanda.message.QCmdMessage;
// import life.genny.qwanda.message.QDataAnswerMessage;
// import life.genny.qwanda.Ask;
// import life.genny.qwanda.Link;


// import java.lang.reflect.Type;
// import java.util.Map;
// import java.util.Set;
// import java.util.Iterator;
// //import java.util.ArrayList;
// //import java.util.List;
// import java.util.HashMap; 
// import java.time.LocalDateTime;
// import java.time.ZonedDateTime;
// import com.google.gson.GsonBuilder;
// import com.google.gson.JsonDeserializationContext;
// import com.google.gson.JsonDeserializer;
// import com.google.gson.JsonElement;
// import com.google.gson.JsonParseException;
// import com.google.gson.JsonPrimitive;
// import com.google.gson.JsonSerializationContext;
// import com.google.gson.FieldNamingPolicy;
// import io.vertx.core.json.JsonObject;
// import io.vertx.core.json.JsonArray;
// import java.time.format.DateTimeFormatter;
// import life.genny.qwanda.DateTimeDeserializer;



// /* Rule listening to Gender Inference */
// rule "Inference Gender Change"
//     when
//         $m: QEventAttributeValueChangeMessage( event_type == "EVT_ATTRIBUTE_VALUE_CHANGE" && QEventAttributeValueChangeMessage.getData().getCode().equals("PRI_FIRSTNAME") )
//         bus:EventBus() 
//         $map : Map($value: this["token"] != null)
//          rules: QRules()
 
//      then    
//         RulesUtils.header(drools.getRule().getName());  
        
//         GsonBuilder gsonBuilder = new GsonBuilder();
//         gsonBuilder.registerTypeAdapter(LocalDateTime.class, new DateTimeDeserializer());
//         Gson gson = gsonBuilder.create();
         
//          RulesUtils.println("QEventAttributeValueChangeMessage   ::    " +$m); 
//         RulesUtils.println("Attribute Code changed              ::    "+$m.data.getCode()); 
//         RulesUtils.println("------------------------------------------------------------------------");
		
// 		String PRI_FIRSTNAME=  $m.getAnswer().getValue();
//         JsonObject genderObj = new JsonObject( QwandaUtils.apiGet("https://api.genderize.io/?name=" +PRI_FIRSTNAME , null));
//         /* PRINT genderObj */
//         RulesUtils.println("------------------------------------------------------------------------\n");
//         RulesUtils.println("GENDER OBJECT   ::   "+genderObj.toString());
        
//         String gender= genderObj.getString("gender");    
//         Float weight= genderObj.getFloat("probability");    
       
//         if(gender !=null ) {
//             RulesUtils.println("GENDER   ::   "+gender.toString());
//             RulesUtils.println("\n------------------------------------------------------------------------");
            
//             /* Collect DATA to save gender as an answer */
//             Answer newAnswer = $m.getAnswer();

//             String jsonAnswerStr = gson.toJson(newAnswer);
//             JsonObject jsonAnswer = new JsonObject(jsonAnswerStr);
//             jsonAnswer.put("value",gender);
//             jsonAnswer.put("attributeCode","PRI_GENDER");
//             jsonAnswer.put("inferred",true);
//             jsonAnswer.put("weight",weight);
//             JsonArray items = new JsonArray();
//             items.add(jsonAnswer);

//                 /* Creating Answer DATA_MSG */
//             JsonObject obj = new JsonObject();
//             obj.put("msg_type", "DATA_MSG");
//             obj.put("data_type", "Answer");
//             obj.put("items", items); 
//             /* Print Answer */
//             RulesUtils.println("\nSaving PRI_GENDER as an Answer   ::    "+obj.toString()); 
//             obj.put("token",rules.getToken());
//             bus.publish("data", obj);
//         }else{
//             RulesUtils.println("------------------------------------------------------------------------\n");
//             RulesUtils.println("GENDER   ::  Not available ");
//             RulesUtils.println("Sorry, No Inferred Rule was executed ");
//         }
//     RulesUtils.footer(drools.getRule().getName());          
// end
