package life.genny.rules;
import life.genny.rules.QRules;

rule "Send offer notification to Intern"
	when
		rules: QRules(  isState("SEND_OFFER_MESSAGE_TO_INTERN") &&
						!isState("LOOP_INTERN_NOTIFICATION_OFFER") )
	then
	 	rules.header();

		rules.setState("LOOP_INTERN_NOTIFICATION_OFFER");
 		BaseEntity beg = rules.getAsBaseEntity("begBe");
        BaseEntity intern = rules.getAsBaseEntity("internBe");
        BaseEntity internship = rules.getAsBaseEntity("internshipBe");
        BaseEntity hostCompany = rules.getAsBaseEntity("hostCompanyBe");

        if(beg == null){
            rules.println("beg is null");
            return;
        }else if(intern == null){
            rules.println("intern is null");
            return;
        }else if(internship == null){
            rules.println("internship is null");
            return;
        }else if(hostCompany == null){
            rules.println("hostCompany is null");
            return;
        }else{

            String json = "{\"loading\":\"Loading your documents...\",\"evt_type\":\"REDIRECT_EVENT\",\"evt_code\":\"REDIRECT_SHOW_OFFER\",\"data\":{\"value\": \"" + beg.getCode() + "\"}}";
			String base64 = rules.encodeToBase64(json);

	 		HashMap<String, String> contextMap = new HashMap<String, String>();
	        contextMap.put("BEG", beg.getCode());
            contextMap.put("INTERN", intern.getCode());
	        contextMap.put("INTERNSHIP", internship.getCode());
	        contextMap.put("HOSTCOMPANY", hostCompany.getCode());
	        contextMap.put("URL", "https://interns.outcome-hub.com/?state=" + base64);
	        //contextMap.put("URL", "http://localhost:3000/?state=" + base64);

			String[] recipients = new String[1];
			recipients[0] = intern.getCode();

            rules.sendMessage(null, recipients, contextMap, "MSG_INTERNMATCH_INTERNSHIP_OFFER_INTERN", "EMAIL");
 		    rules.setState("SENT_OFFER_MESSAGE_TO_INTERN");
 		}

	 	rules.footer();
end
