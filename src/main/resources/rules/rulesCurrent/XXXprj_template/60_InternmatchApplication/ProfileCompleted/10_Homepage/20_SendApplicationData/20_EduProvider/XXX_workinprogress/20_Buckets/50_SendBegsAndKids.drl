package life.genny.rules;
import life.genny.rules.QRules;

/* Sends BEGS and KIDS - EDU_PROVIDER */
rule "Send Buckets - EDU_PROVIDER" 
    when    
        rules: QRules(  isState("SEND_BEGS_AND_KIDS_EDU_PROVIDER") && 
                        isState("SENT_STUDENTS_EDU_PROVIDER") && 
                        isState("PRI_IS_EDU_PROVIDER") && 
                        !isState("LOOP_SEND_BEGS_AND_KIDS_EDU_PROVIDER") )
     then
     	rules.header();
        rules.setState("LOOP_SEND_BEGS_AND_KIDS_EDU_PROVIDER");
		
		List<BaseEntity> buckets = rules.getAsBaseEntitys("eduProviderBuckets");

		List<BaseEntity> students = rules.getAsBaseEntitys("studentsBeList");
		
		if(students != null){
			for(BaseEntity student : students){
				if(buckets != null ){
					for (BaseEntity bucket : buckets) {
						rules.println("BUCKET code   ::   " + bucket.getCode());

						List<BaseEntity> begs = rules.getBaseEntitysByParentAndLinkCode(bucket.getCode(), "LNK_CORE", 0, 500, false, student.getCode());

						println("No. of BEGs   ::   " + begs.size());

						if(begs != null){
							/* subscribe to all the student's BEGs */
							rules.subscribeUserToBaseEntities(rules.getUser().getCode(), begs);
							rules.publishCmd(begs, bucket.getCode(), "LNK_CORE");

							for (BaseEntity beg : begs) {
								
								rules.println("BEG code   ::   " + bucket.getCode());
								List<BaseEntity> begKids = rules.getBaseEntitysByParentAndLinkCode(beg.getCode(), "LNK_BEG", 0, 500, false);

								if(begKids != null){

									/* subscribe to all the begKids of beg   */
									rules.subscribeUserToBaseEntities(rules.getUser().getCode(), begKids);
									rules.publishCmd(begKids, beg.getCode(), "LNK_BEG");
								
									/* SUBSCRIBE & SEND APPLICANT */
									for(BaseEntity begKid : begKids){

										BaseEntity applicant = rules.getChildren(begKid.getCode(), "LNK_APP", "APPLICANT");
										if (applicant != null) {
											/* SUBSCRIBE to APPLICANT  */
											rules.subscribeUserToBaseEntity(rules.getUser().getCode(), applicant.getCode());

											/* SEND APPLICANT */
											rules.publishBaseEntityByCode(applicant.getCode(), begKid.getCode(), "LNK_APP", recipient);

										}else{
											rules.println("applicant is null");
										}
									}
								}else{
									rules.println("begKids is null");
								}
							}	
						}else{
							rules.println("begs is null");
						}
					}
				}else{
					rules.println("buckets is null");
				}
			}
		}else{
			rules.println("No students found");
			rules.println("No BEGS found");
		}
		rules.setState("SENT_BEGS_AND_KIDS_EDU_PROVIDER");
		rules.setState("SENT_XYZ");
	    rules.footer();      		      
end