package life.genny.rules;
import life.genny.rules.QRules;

/* Send GRP_AVAILABLE begKids - INTERN */
/* Sending INTERNSHIP \ CREATOR \ HOSTCOMPANY \ APPLICATION >> APPLICANT */
rule "Send GRP_AVAILABLE - INTERN" 
    when    
        rules: QRules(  isState("SEND_GRP_AVAILABLE_BEG_KIDS_INTERN") && 
                        isState("SENT_GRP_AVAILABLE_BEGS_INTERN") && 
                        isState("PRI_IS_INTERN") && 
                        !isState("LOOP_SEND_GRP_AVAILABLE_BEG_KIDS_INTERN") )
     then
     	rules.header();
        rules.setState("LOOP_SEND_GRP_AVAILABLE_BEG_KIDS_INTERN");
		
        /* 	get all the begs of GRP_AVAILABLE */
        List<BaseEntity> availableBegs = rules.getBaseEntitysByParentAndLinkCode(bucket.getCode(), "LNK_CORE", 0, 500, false);

        if (availableBegs != null) {

            for (BaseEntity beg : availableBegs) {

                /* get all the begKids */
                List<BaseEntity> begKids = rules.getBaseEntitysByParentAndLinkCode(beg.getCode(), "LNK_BEG", 0, 500, false);

                if(begKids != null){

                    for (BaseEntity begKid : begKids) {

                        /* if begKid == APPLICATION */
                        if (begKid.getName().equals("APPLICATION")) {
                            BaseEntity applicant = rules.getChildren(begKid.getCode(), "LNK_APP", "APPLICANT");

                            if (applicant != null) {
                                
                                /* if  current INTERN == APPLICANT of this applicantion BE */
                                if (getUser().getCode().equals(applicant.getCode())) {

                                    /* subscribe to APPLICATION  */
                                    rules.subscribeUserToBaseEntity(getUser().getCode(), begKid.getCode());
                                    rules.subscribeUserToBaseEntity(getUser().getCode(), applicant.getCode());

                                    rules.publishBaseEntityByCode(begKid.getCode(), beg.getCode(), "LNK_BEG", {rules.getUser().getCode()});
                                    rules.publishBaseEntityByCode(applicant.getCode(), begKid.getCode(), "LNK_APP", {rules.getUser().getCode()});
                                }
                            }
                        }else {
                            rules.publishBaseEntityByCode(begKid.getCode(), beg.getCode(), "LNK_BEG", {rules.getUser().getCode()});
                            rules.setState("SENT_GRP_AVAILABLE_BEG_KIDS_INTERN");
                            rules.setState("SEND_BUCKETS_INTERN");
                        }
                    }  
                }
                
            }
        }
	    rules.footer();      		      
end