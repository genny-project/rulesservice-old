package life.genny.rules;

import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QEventAttributeValueChangeMessage;
import life.genny.qwanda.entity.BaseEntity;
import java.lang.Double;
import java.lang.String;


function Double calculate(String price) {

	Double ownerOriginalPrice = Double.parseDouble(price);
    return ownerOriginalPrice;
}

/*  Calculate Load Price adding service fee  */
rule "Calculate Load Price"

    when
    $m: QEventAttributeValueChangeMessage(  QEventAttributeValueChangeMessage.getData().getCode().equals("PRI_PRICE")  && getAnswer().getTargetCode().startsWith("BEG_") )
    	rules : QRules()
    then    
    	    rules.header();
	    RulesUtils.println(" Inside the Calculate Price  "   );
        Answer newAnswer = $m.getAnswer();
        RulesUtils.println("Answer from QEventAttributeValueChangeMessage in Load Price Attribute Change ::  "+newAnswer.toString());
       
       /* TODO: change to BigDecimal   */
         Double originalPrice = Double.parseDouble(newAnswer.getValue());
         String begCode = newAnswer.getTargetCode();
         rules.println("The original price is     ::"  +originalPrice );
         
        /* Calculating Owner Price - adding GST  */
         Double ownerPrice = rules.includeGST(originalPrice);
         rules.println("The owner price after adding GST  is     ::"  +ownerPrice );
         
        /*  Saving OWNER_PRICE attribute to the BEG   */
         Answer jobOwnerPriceAnswer = new Answer(rules.getUser().getCode(),begCode,"PRI_OWNER_PRICE",String.valueOf(ownerPrice));             
         rules.publishData(jobOwnerPriceAnswer);
      
       /*   Calculating  service fee - (Fees(in ex GST Amount- PRI_PRICE)+ GST on total fee amount)   */
         Double fees = rules.calculateFees(originalPrice);
         Double feeWithGST = fees + rules.includeGST(fees);
         rules.println("The fee price after adding GST  is     ::"  +feeWithGST );
       
       /*  Saving FEE_PRICE attribute to the BEG - Fees in ex GST amount + GST  */
         Answer feePriceAnswer = new Answer(rules.getUser().getCode(),begCode,"PRI_FEE",String.valueOf(feeWithGST));             
         rules.publishData(feePriceAnswer);
         Double driverPrice = ownerPrice - feeWithGST;
         rules.println("The driver price after deducting feesWithGst  is     ::"  +driverPrice );
       
       /*  Saving DRIVER_PRICE attribute to the BEG   */
         Answer driverPriceAnswer = new Answer(rules.getUser().getCode(),begCode,"PRI_DRIVER_PRICE",String.valueOf(driverPrice));             
         rules.publishData(driverPriceAnswer);
       
        rules.footer();
end



