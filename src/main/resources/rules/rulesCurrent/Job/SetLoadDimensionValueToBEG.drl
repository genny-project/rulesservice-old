package life.genny.rules;

import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QEventLinkChangeMessage;
import life.genny.qwanda.entity.EntityEntity;
import com.google.gson.Gson;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QEventAttributeValueChangeMessage;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.MergeUtil;
import life.genny.qwandautils.JsonUtils;
import life.genny.rules.RulesUtils;
import life.genny.qwanda.entity.User;
import life.genny.qwanda.Link;
import life.genny.qwanda.entity.BaseEntity;
import java.util.Map;
import java.util.HashMap; 
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.JsonPrimitive;
import com.google.gson.JsonSerializationContext;
import com.google.gson.FieldNamingPolicy;
import io.vertx.core.json.JsonObject;
import io.vertx.core.json.JsonArray;
import java.time.format.DateTimeFormatter;
import life.genny.qwanda.DateTimeDeserializer;

/*   Rule to handle load selection   */
rule "Set Load Height to BEG"

   ruleflow-group 'AttributeChange'
    when
    $m: QEventAttributeValueChangeMessage( (QEventAttributeValueChangeMessage.getData().getCode().equals("PRI_LOAD_HEIGHT") || QEventAttributeValueChangeMessage.getData().getCode().equals("PRI_LOAD_LENGTH") 
               ||  QEventAttributeValueChangeMessage.getData().getCode().equals("PRI_LOAD_WEIGHT") ||  QEventAttributeValueChangeMessage.getData().getCode().equals("PRI_LOAD_WIDTH")) && getAnswer().getTargetCode().startsWith("LOD_") )
    	rules : QRules()
    then    
    	    rules.header();
	    
         Answer newAnswer = $m.getAnswer();
         BaseEntity load = rules.getBaseEntityByCode(newAnswer.getSourceCode());
         System.out.println("The laod value is "+load.toString());
      
         RulesUtils.println(" Load Baseentity Upodated  " );
         System.out.println("The updated laod name after PUT is "+load.getName());
         RulesUtils.println(" Inside the Load Title Attribute Change  rule  "   );
         RulesUtils.println("The created value  ::  "+newAnswer.getCreatedDate());
         RulesUtils.println("Answer from QEventAttributeValueChangeMessage in Load Title Attribute Change ::  "+newAnswer.toString());
  
         String value = newAnswer.getValue();
         rules.println("The load "+$m.getData().getCode()+ " is    ::"  +value );
           
       /* Get the sourceCode(Job code) for this LOAD */
        BaseEntity job = rules.getParent(newAnswer.getTargetCode(), "LNK_BEG");
       
       Answer jobTitleAnswer = new Answer(rules.getUser().getCode() ,job.getCode(),  $m.getData().getCode() ,value);             
       rules.publishData(jobTitleAnswer);
       
       rules.footer();
end
