package life.genny.rules;

import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;

import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QEventAttributeValueChangeMessage;

import life.genny.qwandautils.PaymentUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.MergeUtil;


rule "Assembly user updation for attribute change - Mobile"
    when
    	m: QEventAttributeValueChangeMessage( event_type == "EVT_ATTRIBUTE_VALUE_CHANGE" && QEventAttributeValueChangeMessage.getData().getCode().equals("PRI_MOBILE") ) 
    	rules: QRules()
    then    
		RulesUtils.header(drools.getRule().getName());
        
        String userName = rules.getAsString("preferred_username");
     	String userCode =  QwandaUtils.getBaseEntityCodeForUserName(userName, rules.getToken());
     	String tokenString = rules.getToken();
        
        /* get assembly authKey   */
    	String assemblyAuthToken = PaymentUtils.getAssemblyAuthKey();
     
    	/*  Gets assembly userId */
    	String assemblyId = MergeUtil.getAttrValue(userCode, "PRI_ASSEMBLY_USER_ID", tokenString);
    	
    	if(assemblyId != null) {
    		 
    	/* extract answers */
      	Answer answer = m.getAnswer();
        
        String targetCode = answer.getTargetCode();
        String sourceCode = answer.getSourceCode();
        String value = answer.getValue();
        String attributeCode = m.data.getCode();

        RulesUtils.println("Printing Answer data recieved for Update in Assembly  ::");  
        RulesUtils.println("\nSource Code: " +sourceCode + "\nTarget Code: " +targetCode + "\nAttribute Code: " +attributeCode + "\nAttribute Value: " +value);
           
        /* Updates assembly user profile */
        String response = PaymentUtils.updateUserPersonalInfo(null, assemblyId, attributeCode, value, assemblyAuthToken);
        		RulesUtils.println("updated payments response ::"+response);
         
    	}
        
        RulesUtils.footer(drools.getRule().getName());
end


