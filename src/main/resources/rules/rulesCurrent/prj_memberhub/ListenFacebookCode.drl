package life.genny.rules;

import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QMessage.MessageData;
import life.genny.qwanda.message.QCmdMessage;
import io.vertx.rxjava.core.eventbus.EventBus;
import io.vertx.core.buffer.Buffer;
import com.google.gson.Gson;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QEventAttributeValueChangeMessage;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.MergeUtil;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.MergeUtil;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.Ask;
import life.genny.qwanda.Link;


import java.lang.reflect.Type;
import java.util.Map;
import java.util.Set;
import java.util.Iterator;
import java.util.HashMap; 
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.JsonPrimitive;
import com.google.gson.JsonSerializationContext;
import com.google.gson.FieldNamingPolicy;
import io.vertx.core.json.JsonObject;
import io.vertx.core.json.JsonArray;
import java.time.format.DateTimeFormatter;
import life.genny.qwanda.DateTimeDeserializer;

//Rule listening to Facebook Code change
rule "Listen Facebook Code"
    when
       $m: QEventAttributeValueChangeMessage( event_type == "EVT_ATTRIBUTE_VALUE_CHANGE" && QEventAttributeValueChangeMessage.getData().getCode().equals("PRI_FB_BASIC") )
        rules: QRules()
        bus: EventBus()
 
     then
        rules.header();
        System.out.println("QEventAttributeValueChangeMessage   ::    " +$m); 
        System.out.println("Attribute Code changed              ::    "+$m.data.getCode()); 
      
        // Collect DATA 
        JsonObject data = new JsonObject();
        $m.getAnswer();
        data.put("value", $m.getAnswer().getValue());
        data.put("attributeCode", $m.getAnswer().getAttributeCode()); 
        data.put("targetCode", $m.getAnswer().getTargetCode()); 
        data.put("sourceCode", $m.getAnswer().getSourceCode());  
        data.put("expired",  $m.getAnswer().getExpired());
        data.put("refused",  $m.getAnswer().getRefused());
        data.put("weight",  $m.getAnswer().getWeight());    
        data.put("token", rules.getToken());

        bus.publish("social", data);
        rules.footer();
        
end
