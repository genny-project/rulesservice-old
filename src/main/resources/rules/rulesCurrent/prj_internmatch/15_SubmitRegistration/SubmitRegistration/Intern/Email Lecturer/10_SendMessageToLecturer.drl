package life.genny.rules;
import life.genny.rules.QRules;

rule "Send Message to Lecturer"
	when
		rules: QRules(  isState("TRIGGER_SEND_EMAIL_TO_LECTURER") && 
						        !isState("LOOP_TRIGGER_SEND_EMAIL_TO_LECTURER") )
	then
	 	rules.header();
		rules.setState("LOOP_TRIGGER_SEND_EMAIL_TO_LECTURER");
    rules.println("This rule ran :: send lecturer message");

    BaseEntity intern = rules.getAsBaseEntity("internBe");
    
    if(intern == null){
        rules.println("intern is null");
        return;
    }else {
      
      rules.println("Email is this :: ");
      
      HashMap<String, String> contextMap = new HashMap<String, String>(); 
      contextMap.put("INTERN", intern.getCode());


      String[] recipients = new String[1];
      recipients[0] = intern.getCode();

      rules.println("dbug recipients assigned :: ");


      // rules.sendMessage(null, recipients, contextMap, "MSG_INTERNMATCH_INVITE_INTERN", "EMAIL");
      // rules.sendMessage(null, recipients, contextMap, "MSG_INTERNMATCH_INVITE_INTERN", "SMS");


      rules.setState("TRIGGER_SENT_EMAIL_TO_LECTURER");
 		}
	 	
	 	rules.footer();      
end
