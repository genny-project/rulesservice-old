package life.genny.rules;
import life.genny.rules.QRules;
import life.genny.utils.VertxUtils;

/* Publish NEW_BEG TO bucket */
rule "Duplicate BEG - Step 9"
	when
		rules: QRules( 	isState("PUBLISH_NEW_BEG_AND_KIDS_TO_EDU_PROVIDER") && 
						isState("SUBSCRIBED_INTERN_TO_NEW_BEG") && 
						isState("QUE_INTERNSHIP_ADDITIONAL_GRP") && 
						isState("EVENT_FORM_SUBMIT") && 
						isState("SUBMIT") &&
						!isState("LOOP_DUPLICATE_BEG_STEP9") ) 
	 then
	 	rules.header();
        rules.setState("LOOP_DUPLICATE_BEG_STEP9");

		BaseEntity newbeg = rules.getAsBaseEntity("newBegBe");
		BaseEntity internship = rules.getAsBaseEntity("internshipBe");
		BaseEntity creator = rules.getAsBaseEntity("creatorBe");
		BaseEntity company = rules.getAsBaseEntity("companyBe");
		BaseEntity application = rules.getAsBaseEntity("applicationBe");
		BaseEntity intern = rules.getAsBaseEntity("internBe");

		if(newbeg == null){
			rules.println("newbeg is null");
		}else if(internship == null){
			rules.println("internship is null");
		}else if(creator == null){
			rules.println("creator is null");
		}else if(company == null){
			rules.println("company is null");
		}else if(application == null){
			rules.println("application is null");
		}else if(intern == null){
			rules.println("intern is null");
		}else{
			String[] begSubscribers = VertxUtils.getSubscribers(rules.realm(), newbeg.getCode());
			rules.println("NEW_BEG Subscribers   ::   " + Arrays.toString(begSubscribers));
			
			rules.publishBaseEntityByCode(newbeg.getCode(), "GRP_SHORTLISTED", "LNK_CORE", begSubscribers);
			rules.publishBaseEntityByCode(internship.getCode(), newbeg.getCode(), "LNK_BEG", begSubscribers);
			rules.publishBaseEntityByCode(creator.getCode(), newbeg.getCode(), "LNK_BEG", begSubscribers);
			rules.publishBaseEntityByCode(company.getCode(), newbeg.getCode(), "LNK_BEG", begSubscribers);
			rules.publishBaseEntityByCode(application.getCode(), newbeg.getCode(), "LNK_BEG", begSubscribers);
			rules.publishBaseEntityByCode(intern.getCode(), newbeg.getCode(), "LNK_BEG", begSubscribers);
			
			rules.setState("PUBLISHED_NEW_BEG_AND_KIDS");
			rules.setState("MOVE_NEW_BEG_TO_SHORTLIST");
		}
	 	rules.footer();      
end
