package life.genny.rules;
import life.genny.rules.QRules;
import life.genny.utils.VertxUtils;

/* Publish BEG */
rule "Submit Internship - Step 5"	
	when
		rules: QRules( 	isState("MOVED_BEG_TO_AVAILABLE") && 
						isState("EVENT_FORM_SUBMIT") && 
						isState("PUBLISH_BEG") && 
						!isState("LOOP_SUBMIT_INTERNSHIP_STEP5") ) 
	 then
	 	rules.header();
        rules.setState("LOOP_SUBMIT_INTERNSHIP_STEP5");

		BaseEntity beg = rules.getAsBaseEntity("begBe");
		BaseEntity internship = rules.getAsBaseEntity("internshipBe");
		BaseEntity company = rules.getAsBaseEntity("companyBe");
		
		String[] begRecipients = VertxUtils.getSubscribers(rules.realm(), beg.getCode());
		
		rules.publishBaseEntityByCode(rules.getUser().getCode(), beg.getCode(), "LNK_BEG", begRecipients);
		rules.publishBaseEntityByCode(company.getCode(), beg.getCode(), "LNK_BEG", begRecipients);
		rules.publishBaseEntityByCode(internship.getCode(), beg.getCode(), "LNK_BEG", begRecipients);
		rules.publishBaseEntityByCode(beg.getCode(), "GRP_AVAILABLE", "LNK_CORE", begRecipients);
		rules.setState("PUBLISHED_BEG");

		rules.set("subLayoutCode", "DASHBOARD");
		rules.set("subLayoutPath", "homepage/dashboard_host_company.json");
		rules.set("subLayoutRootCode", "GRP_DASHBOARD");
		rules.set("subLayoutIsPopup", false);

		rules.setState("SEND_SUBLAYOUT");
	 	rules.footer();      
end
