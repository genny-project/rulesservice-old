package life.genny.rules;
import life.genny.rules.QRules;

import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.ArrayList;

rule "SMS Add Internhsip"
    when
         rules: QRules( isState("SEND_SMS_ADD_INTERNSHIP") &&
         				!isState("LOOP_SEND_SMS_ADD_INTERNSHIP") )
     then
     	rules.header();
        rules.setState("LOOP_SEND_SMS_ADD_INTERNSHIP");
        
        /* Get the required baseEntities for contextMap */
        BaseEntity beg = rules.getAsBaseEntity("begBe");
        BaseEntity internship = rules.getAsBaseEntity("internshipBe");
        BaseEntity application = rules.getAsBaseEntity("applicationBe");

        HashMap<String,String> contextMap = new HashMap<String, String>();
        contextMap.put("BEG", beg.getCode());
        contextMap.put("INTERNSHIP", internship.getCode());
        contextMap.put("INTERN", intern.getCode());
        contextMap.put("APPLICATION", application.getCode());

        String[] smsRecipient = { intern.getCode(), rules.getuser().getCode() };
        String[] emailRecipient = { intern.getCode() };
        String[] smsRecipient = { intern.getCode() };
        String templateCode = "MSG_INTERNMATCH_NEW_POSITION_ADDED";

        rules.set("contextMap", contextMap);
        rules.set("smsRecipient", smsRecipient);
        rules.set("templateCode", templateCode);

        if( contextMap == null){
            rules.println("SEND SMS   ::   contextMap is null");
        }else if( smsRecipient == null){
            rules.println("SEND SMS   ::   smsRecipient is null");
        }else if( templateCode == null){
            rules.println("SEND SMS   ::   templateCode is null");
        }else{
            rules.setState("SEND_SMS");
            rules.setState("SENT_SMS_ADD_INTERNSHIP");
        }     
	    rules.footer();      		      
end

