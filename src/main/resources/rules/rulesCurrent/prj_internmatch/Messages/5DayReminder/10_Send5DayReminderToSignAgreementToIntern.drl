package life.genny.rules;
import life.genny.rules.QRules;

rule "send 5day reminder to intern"
	when 
		rules: QRules(	isState("MSG_INTERNMATCH_5_DAY_PLEASE_SIGN_AGREEMENT_INTERN") &&
						!isState("INTERN_SIGNED_AGREEMENT"))
	then
		rules.header(); 
		rules.setState("INTERN_SIGNED_AGREEMENT");
		
		BaseEntity beg = rules.getAsBaseEntity("begBe");
		BaseEntity intern = rules.getAsBaseEntity("internBe");
		BaseEntity eduProvider = rules.getAsBaseEntity("eduProviderBe");
        BaseEntity internship = rules.getAsBaseEntity("internshipBe");
        BaseEntity hostCompany = rules.getAsBaseEntity("hostCompanyBe");
        
        if (beg == null){
        	rules.println("beg is null")
        	return;
        }else if (intern == null){
        	rules.println("intern is null")
        	return;
        }else if (eduProvider == null){
        	rules.println("eduProvider is null")
        	return;
        }else if (internship == null){
        	rules.println("internship is null")
        	return;
        }else if (hostCompany == null){
        	rules.println("hostCompany is null")
        	return;
        }else{
        
        	HashMap<String, String> contextMap = new HashMap<String, String>(); 
        	contextmap.put("BEG", beg.getCode());
        	contextmap.put("INTERN", intern.getCode());
        	contextmap.put("EDUPROVIDER", eduProvider.getCode());
        	contextmap.put("INTERNSHIP", internship.getCode());
        	contextmap.put("HOSTCOMPANY",hostCompany.getCode())
        	
        	String[] recipients = {intern.getCode()};
        
        	rules.sendMessage(null, recipients, contextMap,"MSG_INTERNMATCH_5_DAY_PLEASE_SIGN_AGREEMENT_INTERN","EMAIL");
        	rules.setState("SENT_AGREEMENT_TO_INTERN");
        }
         
		rules.footer();
end