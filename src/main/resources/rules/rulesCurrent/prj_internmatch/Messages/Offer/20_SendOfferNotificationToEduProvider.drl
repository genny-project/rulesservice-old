package life.genny.rules;
import life.genny.rules.QRules;

rule "Send offer notification to Education Provider Representative"
	when
		rules: QRules(  isState("SEND_OFFER_MESSAGE_TO_EDU_PROVIDER") && 
						!isState("LOOP_EDU_PROVIDER_NOTIFICATION_OFFER") )
	then
	 	rules.header();
 		
		rules.setState("LOOP_EDU_PROVIDER_NOTIFICATION_OFFER");

 		BaseEntity beg = rules.getAsBaseEntity("begBe");
        BaseEntity intern = rules.getAsBaseEntity("internBe");
        BaseEntity internship = rules.getAsBaseEntity("internshipBe");
        BaseEntity hostCompany = rules.getAsBaseEntity("hostCompanyBe");
 		BaseEntity eduProvider = rules.getAsBaseEntity("eduProviderBe");

        if(beg == null){
            rules.println("beg is null");
            return;
        }else if(intern == null){
            rules.println("intern is null");
            return;
        }else if(internship == null){
            rules.println("internship is null");
            return;
        }else if(hostCompany == null){
            rules.println("hostCompany is null");
            return;
        }else if(eduProvider == null){
            rules.println("eduProvider is null");
            return;
        }else{
        
            String json = "{\"loading\":\"Loading your documents...\",\"evt_type\":\"REDIRECT_EVENT\",\"evt_code\":\"REDIRECT_SHOW_OFFER\",\"data\":{\"value\": \"" + beg.getCode() + "\"}}";
			String base64 = rules.encodeToBase64(json);
			
	 		HashMap<String, String> contextMap = new HashMap<String, String>(); 
	        contextMap.put("BEG", beg.getCode());
            contextMap.put("INTERN", intern.getCode());
	        contextMap.put("INTERNSHIP", internship.getCode());
	        contextMap.put("HOSTCOMPANY", hostCompany.getCode());
	        contextMap.put("URL", "http://localhost:3000/?state=" + base64);

			String[] recipients = null;

            /* Get all the EDU PROVIDER staffs */
            List<BaseEntity> eduProviderStaffs = rules.getChildrens(eduProvider.getCode(), "LNK_EDU", "STAFF");
            if(eduProviderStaffs != null) {
                rules.println("No. of eduProviderStaffs   ::   " + eduProviderStaffs.size() );	
                recipients = new String[eduProviderStaffs.size()];
                int i = 0;
                for(BaseEntity eduProviderStaff : eduProviderStaffs) {
                    recipients[i] = eduProviderStaff.getCode();
                    i++;
                }
            }
	        
            rules.sendMessage(null, recipients, contextMap, "MSG_INTERNMATCH_INTERNSHIP_OFFER_EDU_PROVIDER", "EMAIL");
 		    rules.setState("SENT_OFFER_MESSAGE_TO_EDU_PROVIDER");
 		}
	 	
	 	rules.footer();      
end
