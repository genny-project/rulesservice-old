package life.genny.rules;
import life.genny.rules.QRules;

rule "Send Offer Message To Intern"
	when
		rules: QRules(  isState("SEND_OFFER_MESSAGE_TO_INTERN") && 
                        !isState("LOOP_SEND_OFFER_MESSAGE_TO_INTERN") )
	then
	 	rules.header();
 		rules.setState("LOOP_SEND_OFFER_MESSAGE_TO_INTERN");
 		
        BaseEntity beg = rules.getAsBaseEntity("begBe");
        BaseEntity intern = rules.getAsBaseEntity("internBe");
        BaseEntity internship = rules.getAsBaseEntity("internshipBe");
        BaseEntity hostCompany = rules.getAsBaseEntity("hostCompanyBe");
 		
        if(beg == null){
            rules.println("beg is null");
            return;
        }else if(intern == null){
            rules.println("intern is null");
            return;
        }else if(internship == null){
            rules.println("internship is null");
            return;
        }else if(hostCompany == null){
            rules.println("hostCompany is null");
            return;
        }else{
 		
	 		HashMap<String, String> contextMap = new HashMap<String, String>(); 
	        contextMap.put("BEG", beg.getCode());
	        contextMap.put("INTERN", intern.getCode());
	        contextMap.put("INTERNSHIP", internship.getCode());
	        contextMap.put("HOSTCOMPANY", hostCompany.getCode());
	        
 			String[] recipients = {intern.getCode()};
 			
            rules.sendMessage(null, recipients, contextMap, "MSG_INTERNMATCH_INTERNSHIP_OFFER_INTERN", "EMAIL");
 		    rules.setState("SENT_OFFER_MESSAGE_TO_INTERN");
 		}
	 	rules.footer();      
end
