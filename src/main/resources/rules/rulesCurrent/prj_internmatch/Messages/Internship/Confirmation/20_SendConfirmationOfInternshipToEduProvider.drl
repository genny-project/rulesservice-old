package life.genny.rules;
import life.genny.rules.QRules;
import java.util.HashMap;

rule "Send confirmation of Internship to Education Provider"
    when
        rules: QRules(  isState("SEND_CONFIRMATION_OF_INTERNSHIP_MESSAGE_TO_EDU_PROVIDER_REP") &&
                        !isState("LOOP_SEND_CONFIRMATION_OF_INTERNSHIP_MESSAGE_TO_EDU_PROVIDER_REP") )
    then
        rules.header();
        rules.setState("LOOP_SEND_CONFIRMATION_OF_INTERNSHIP_MESSAGE_TO_EDU_PROVIDER_REP");

        BaseEntity beg = rules.getAsBaseEntity("begBe");
        BaseEntity intern = rules.getAsBaseEntity("internBe");
        BaseEntity internship = rules.getAsBaseEntity("internshipBe");
        BaseEntity hostCompany = rules.getAsBaseEntity("hostCompanyBe");
        BaseEntity eduProvider = rules.getAsBaseEntity("eduProviderBe");

        if(beg == null){
            rules.println("beg is null");
            return;
        }else if(intern == null){
            rules.println("intern is null");
            return;
        }else if(internship == null){
            rules.println("internship is null");
            return;
        }else if(hostCompany == null){
            rules.println("hostCompany is null");
            return;
        }else if(eduProvider == null){
            rules.println("eduProvider is null");
            return;
        }else{

            HashMap<String, String> contextMap = new HashMap<String, String>();
            contextMap.put("BEG", beg.getCode());
            contextMap.put("INTERN", intern.getCode());
            contextMap.put("INTERNSHIP", internship.getCode());
            contextMap.put("HOSTCOMPANY", hostCompany.getCode());
            contextMap.put("EDU_PROVIDER", eduProvider.getCode());

            String[] recipients = null;

            /* Get all the EDU_PROVIDER staffs */
            List<BaseEntity> eduProviderStaffs = rules.getChildrens(eduProvider.getCode(), "LNK_EDU", "STAFF");
            if(eduProviderStaffs != null) {
                rules.println("No. of eduProviderStaffs   ::   " + eduProviderStaffs.size() );
                recipients = new String[eduProviderStaffs.size()];
                int i = 0;
                for(BaseEntity eduProviderStaff : eduProviderStaffs) {
                    recipients[i] = eduProviderStaff.getCode();
                    i++;
                }
            }
            rules.sendMessage(null, recipients, contextMap, "MSG_INTERNMATCH_CONFIRMATION_OF_INTERNSHIP_EDU_PROVIDER_REP", "EMAIL");
            rules.setState("SENT_CONFIRMATION_OF_INTERNSHIP_MESSAGE_TO_EDU_PROVIDER_REP");
         }

         rules.footer();
end
