package life.genny.rules;
import life.genny.rules.QRules;

/* Set BEG \ APP \ INTERN To Map */
rule "Shortlist Internship - Step 0"
	when
		rules: QRules( 	isState("BTN_SHORTLIST_INTERN") && 
						isState("EVENT_BTN_CLICK") && 
						!isState("LOOP_SHORTLIST_INTERN_STEP0")) 
	 then
	 	rules.header();
        rules.setState("LOOP_SHORTLIST_INTERN_STEP0");

		String applicationCode = rules.getAsString("itemCode");
		String oldBegCode = rules.getAsString("hintCode");

		if(applicationCode == null){
            rules.println("applicationCode is null");
        }else if(oldBegCode == null){
            rules.println("oldBegCode is null");
        }else{
			BaseEntity oldBeg = rules.getBaseEntityByCode(oldBegCode);
			rules.set("oldBegBe", oldBeg);
			
			BaseEntity application = rules.getBaseEntityByCode(applicationCode);
			rules.set("applicationBe", application);

			List<BaseEntity> begs = rules.getParents(application.getCode(), "LNK_BEG");
			rules.println("begs of applicatin is   ::   " +begs.size() );

			for(BaseEntity beg : begs){
				if(beg.getCode().equals(oldBeg.getCode())){
					continue;
				}
				rules.println("newBeg is   ::   " + beg.getCode());
				rules.set("newBegBe", beg);
			}

			BaseEntity creator = rules.getChildren(oldBeg.getCode(), "LNK_BEG", "CREATOR");
			BaseEntity hostCompany = rules.getChildren(oldBeg.getCode(), "LNK_BEG", "HOSTCOMPANY");
			BaseEntity internship = rules.getChildren(oldBeg.getCode(), "LNK_BEG", "INTERNSHIP");
			BaseEntity intern = rules.getChildren(application.getCode(), "LNK_APP", "APPLICANT");

			if (creator == null) {
            	rules.println("Creator of oldBeg is null");
				return;
			} 
			if (hostCompany == null) {
            	rules.println("Host Company of oldBeg is null");
				return;
			} 
			if (internship == null) {
            	rules.println("Internship is null");
				return;
			} 
			if (intern == null) {
            	rules.println("Intern is null");
				return;
			} 

            rules.println("oldBeg  ::   " + oldBeg);
            rules.println("application   ::   " + application);
            rules.println("creator   ::   " + creator);
            rules.println("hostCompany   ::   " + hostCompany);
            rules.println("internship   ::   " + internship);
            rules.println("intern   ::   " + intern);
			
			rules.set("creatorBe", creator);
			rules.set("companyBe", hostCompany);
			rules.set("internshipBe", internship);
			rules.set("internBe", intern );
			
			rules.setState("SHORTLIST_INTERN_READY");            
			rules.setState("MOVE_NEW_BEG_TO_SHORTLIST");
        }
	 	rules.footer();      
end
