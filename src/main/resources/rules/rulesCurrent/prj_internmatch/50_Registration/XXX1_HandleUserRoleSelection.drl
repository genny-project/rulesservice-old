package life.genny.rules;

import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.entity.EntityEntity;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QEventAttributeValueChangeMessage;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.MergeUtil;
import life.genny.rules.RulesUtils;
import life.genny.qwanda.Link;

import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.JsonPrimitive;
import com.google.gson.JsonSerializationContext;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;

rule "Handle user role intermatch"
    when
        $m: QEventAttributeValueChangeMessage( event_type == "EVT_ATTRIBUTE_VALUE_CHANGE" && QEventAttributeValueChangeMessage.getData().getCode().equals("LNK_USER_ROLE_LISTS") )
        rules: QRules( !isState("USER_TYPE_SAVED"))
     then

     	rules.header();

         String userCode = rules.getUser().getCode();

         Answer newAnswer = $m.getAnswer();
         String targetCode = newAnswer.getTargetCode();
         String sourceCode = newAnswer.getSourceCode();
         String roleValue = "";

         /* String booleanValueMentor = "FALSE";
         String booleanValueMentee = "FALSE";

         if(newAnswer.getValue().equals("SEL_MENTOR"))
         {
             roleValue = "MENTOR";
             booleanValueMentor = "TRUE";
             booleanValueMentee = "FALSE";
         }

         if(newAnswer.getValue().equals("SEL_MENTEE"))
         {
            roleValue = "MENTEE";
            booleanValueMentor = "FALSE";
            booleanValueMentee = "TRUE";
         }

         rules.updateBaseEntityAttribute(userCode, userCode, "PRI_MENTOR", booleanValueMentor);
         rules.updateBaseEntityAttribute(userCode, userCode, "PRI_MENTEE", booleanValueMentee); */
         rules.setState("USER_TYPE_SAVED");
         rules.footer();

end
