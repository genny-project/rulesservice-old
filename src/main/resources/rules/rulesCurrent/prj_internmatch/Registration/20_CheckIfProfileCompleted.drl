package life.genny.rules;

import life.genny.rules.QRules;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.QuestionSourceTarget;
import life.genny.qwanda.message.QDataQSTMessage;

import java.util.ArrayList;
import java.util.Arrays;
import life.genny.qwandautils.MergeUtil;

rule "Check if Profile Completed - Intermatch"
    no-loop true
    when
        rules: QRules( ( isState("USER_CHECKED") || isState("STARTED") ) && isState("CHECK_USER_PROFILE_COMPLETED") && !isState("PROFILE_CHECK_COMPLETED") )
     then
     	rules.header();
     	
     	rules.setState("PROFILE_CHECK_COMPLETED");
     	
		Boolean isProfileCompleted = rules.getUser().getLoopValue("PRI_IS_PROFILE_COMPLETED", false);
		
		if(isProfileCompleted == null || isProfileCompleted == false) {
   		 	rules.setState("PROFILE_NOT_COMPLETED");
   		}
   		else {
   		   	rules.setState("PROFILE_IS_COMPLETED");
   		}
		
		/* String questionGroupCode = rules.getAsString("registration_question_grp");
		
		if(questionGroupCode != null) {
			
			QuestionSourceTarget rootQst = new QuestionSourceTarget(questionGroupCode, userCode, userCode);
	        QuestionSourceTarget[] qstArray = {rootQst};
	        
	   	    QDataQSTMessage qstMsg = new QDataQSTMessage(rootQst, qstArray);
	   	    QDataAskMessage asks = rules.getAskQuestions(qstMsg);
	   	    rules.set(questionGroupCode, qstMsg);

       		List<BaseEntity> baseEntityList = Arrays.asList(rules.getUser());
       		if(QwandaUtils.isMandatoryFieldsCompleted((QDataAskMessage)rules.get(questionGroupCode), baseEntityList) ) {
       			rules.println("profile is completed");
       		 	rules.setState("PROFILE_IS_COMPLETED");
       		}
       		else {
       			rules.println("profile not completed");
       		 	rules.setState("PROFILE_NOT_COMPLETED");
       		}
		}
		else {
			rules.println("ques grp null & profile not completed");
			rules.setState("PROFILE_NOT_COMPLETED");
		} */

    	    rules.footer();
end
