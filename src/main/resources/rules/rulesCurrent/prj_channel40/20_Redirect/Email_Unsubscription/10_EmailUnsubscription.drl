package life.genny.rules;

import life.genny.rules.QRules;
import life.genny.qwanda.message.QEventMessage;
import life.genny.utils.VertxUtils;
import life.genny.qwandautils.QwandaMessage;
import life.genny.qwanda.message.QBaseMSGMessageTemplate;

	rule "Email unsubscription redirect"
		no-loop true
		when
			rules: QRules( isState("TRIGGER_APPLICATION") && 
        				   isState("APPLICATION_READY") &&
        				   isState("REDIRECT_EVENT") && 
        				   isState("LOOP_APPLICATION_READY_CHANNEL40") && 
        				   !isState("EMAIL_UNSUBSCRIBE") )
		then
			rules.header();
			rules.setState("EMAIL_UNSUBSCRIBE");
			
			BaseEntity userBe = rules.getUser();
			
			String templateCode = rules.getAsString("valueCode");
			rules.println("email unsubscription :: "+templateCode + ", data code ::"+rules.getAsString("dataCode"));
			
			/* check if user is already unsubscribed */
			BaseEntity unsubscriptionBe = rules.baseEntity.getBaseEntityByCode("COM_EMAIL_UNSUBSCRIPTION");
			String templateUnsubscribeAttribute = templateCode + "_UNSUBSCRIBE";
			Boolean isUnsubscriptionAlreadyContainsUser = VertxUtils.checkIfAttributeValueContainsString(unsubscriptionBe, templateUnsubscribeAttribute, userBe.getCode());
			
			/* get template */
			QBaseMSGMessageTemplate template = rules.getMessageTemplate(templateCode);
			
			/* if user is already unsubscribed, send slack message that he is unsubscribed */
			if(template != null) {
				if(isUnsubscriptionAlreadyContainsUser) {
					String[] recipientArr = { userBe.getCode() };
					String toastMessage = "You are already unsubscribed from the email with the subject - " + template.getSubject() + "?";
					rules.redirectToHomePage();
					rules.sendDirectToast(recipientArr, toastMessage, "info");	
				} else {
					/* if user is subscribed, ask questions for unsubscription */
				
					/* temporary: save the template code into the cache for retrieval later */
					VertxUtils.putObject(rules.realm(), "MSG_TEMPLATE", rules.getUser().getCode(), rules.getAsString("valueCode"));
			
					/* get template */
					QBaseMSGMessageTemplate template = QwandaUtils.getTemplate( templateCode , rules.getToken());
			
					String customQuestion = "Do you want to unsubscribe from the email with the subject - "+ template.getSubject() + "?";
				
					/* get the question that needs to be edited */
					QwandaMessage questions = rules.getQuestions(userBe.getCode(), userBe.getCode(), "QUE_EMAIL_UNSUBSCRIPTION_GRP");
				
					/* set custom question */
					questions = QwandaUtils.setCustomQuestion(questions, "PRI_IS_EMAIL_UNSUBSCRIBE", customQuestion);
				
					if(questions != null) {
						/* publish the custom question to user */
						rules.publishCmd(questions);
						rules.publishViewCmdMessage("FORM_VIEW", "QUE_EMAIL_UNSUBSCRIPTION_GRP");
					} else {
						rules.redirectToHomePage();
					}
				}
			} else {
				rules.println("template returned is null for the template code :: "+templateCode);
				rules.redirectToHomePage();
			}
			
			
				
			
			rules.footer();
	end
