package life.genny.rules;

import life.genny.rules.QRules;
import life.genny.qwanda.message.QEventMessage;
import life.genny.utils.VertxUtils;

	rule "Email unsubscription submit"
		no-loop true
		when
			rules: QRules( isState("EMAIL_UNSUBSCRIBE") && 
			isState("EVENT_BTN_CLICK") && 
			isState("STARTED") &&
			!isState("EMAIL_UNSUBSCRIBE_SUBMIT") )
		then
			rules.header();
			rules.setState("EMAIL_UNSUBSCRIBE_SUBMIT");

			
			rules.println("email unsubscription :: "+rules.getAsString("valueCode"));
			BaseEntity userBe = rules.getUser();
			
			/* save answer - if template code needs to saved or not */
			Boolean isUnsubscribed = userBe.getValue("PRI_IS_EMAIL_UNSUBSCRIBE", false);
			
			/* get the temporary template value stored in cache */
			String templateCode = VertxUtils.getObject(rules.realm(), "MSG_TEMPLATE", userBe.getCode(), String.class);
			
			rules.println("has the user unsubscribed ::"+isUnsubscribed+ ", template code to be unsubscribed ::"+templateCode );
			
			String unsubscriptionTemplates = userBe.getValue("PRI_EMAIL_UNSUBSCRIPTION_TEMPLATES", null);
			
			if(unsubscriptionTemplates != null) {
			}
			
			
	     	
			rules.footer();
	end
