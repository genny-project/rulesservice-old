package life.genny.rules;

import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;
import life.genny.qwandautils.MergeUtil;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.MessageUtils;
import life.genny.qwandautils.MergeUtil;
import life.genny.qwandautils.KeycloakUtils;
import org.apache.commons.lang3.StringUtils;

import life.genny.qwanda.Answer;
import life.genny.qwanda.Ask;
import life.genny.qwanda.Link;
import life.genny.qwanda.DateTimeDeserializer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.User;

import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QMessage.MessageData;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QCmdViewMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QMSGMessage;
import life.genny.qwanda.message.QBaseMSGMessageType;

import io.vertx.core.buffer.Buffer;
import io.vertx.core.json.JsonObject;
import io.vertx.core.json.JsonArray;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;

import java.lang.reflect.Type;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;

rule "Make Offer"
    when
        $m : QEventBtnClickMessage( event_type == "BTN_CLICK" && data.code == "BTN_MAKE_OFFER")
        rules: QRules()
    then
        rules.header();
        /* Prepare Token & qwandaServiceUrl */
            String qwandaServiceUrl = rules.getQwandaServiceUrl();
            String tokenString = rules.getToken();

        /* Get begCode, username, userCode, userFullName */
            String begCode = $m.getItemCode();
            System.out.println("begCode  ::   "+ begCode);                    
            String userCode = rules.getUser().getCode();
            System.out.println("userCode   ::   "+ userCode);
            String userName = rules.getAsString("preferred_username");
            System.out.println("username   ::   "+ userName);                 
            String userFullName= MergeUtil.getFullName(userCode, tokenString);
            System.out.println("user fullName   ::   "+ userFullName);
        
            String linkCode= "LNK_BEG";
            String linkOffer= "OFFER";
            String linkQuoter= "QUOTER";

        /* Create Offer BE */
            BaseEntity offer = QwandaUtils.createBaseEntityByCode(QwandaUtils.getUniqueId(userCode , null, "OFR", tokenString ), "Offer", qwandaServiceUrl, tokenString);
            RulesUtils.ruleLogger("OFFER Base Entity", offer);
            /* Get Offer Code */
            String offerCode= offer.getCode();
            System.out.println("offerCode   ::   "+offerCode);
            
        /* Save attributes for OFFER as answer */
            Answer offercode = new Answer(userCode, offerCode, "PRI_OFFER_CODE", offerCode);
            Answer quoterCode = new Answer(userCode, offerCode, "PRI_QUOTER_CODE", userCode);
            Answer quoterUname = new Answer(userCode, offerCode, "PRI_QUOTER_USERNAME", userName);
            Answer quoterFullName = new Answer(userCode, offerCode, "PRI_QUOTER_FULLNAME", userFullName);
            Answer jobCode = new Answer(userCode, offerCode, "PRI_BEG_CODE", begCode);
            
            List<Answer> answerList = new ArrayList<Answer>();	
            answerList.add(offercode);
            answerList.add(quoterCode);
            answerList.add(quoterUname);
            answerList.add(quoterFullName);
            answerList.add(jobCode);

            /* save attributes as answer */
            for (Answer answer : answerList) {
                rules.publishData(answer);             
            }                              
        /* Send Offer Questions */
            rules.askQuestions(userCode, offerCode, "QUE_OFFER_DRIVER_GRP", false, true); /* false for form_view*/
        rules.footer();
end