package life.genny.rules;

import life.genny.rules.QRules;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.RulesUtils;
import io.vertx.core.json.JsonObject;

import life.genny.qwanda.message.QCmdMessage;

rule "Delete job"
	when
		$m: QEventMessage( event_type == "BTN_CLICK" && data.code == "BTN_DELETE_BEG")
		rules: QRules( isState("STARTED") && !isState("JOB_MOVED_TO_BIN"))
	then

		rules.header();
		
		rules.setState("JOB_MOVED_TO_BIN");

		String begCode = $m.getData().getValue();


		String[] allBegRecipients = VertxUtils.getSubscribers(rules.realm(), begCode);
		rules.fastClearBaseEntity(begCode, allBegRecipients);

	   /*     Moving the BEG      */
          rules.moveBaseEntitySetLinkValue(begCode, "GRP_NEW_ITEMS", "GRP_BIN", "LNK_CORE", rules.getUser().getCode());

       /* Sending Messages */

           HashMap<String,String> contextMap = new HashMap<String, String>();
           contextMap.put("JOB", begCode);
           contextMap.put("OWNER", rules.getUser().getCode());

  
           /* Sending toast message to all the beg frontends */
            rules.sendMessage("", allBegRecipients, contextMap, "MSG_CH40_NEW_JOB_DELETED", "TOAST");


		

		drools.setFocus("SendLayoutsAndData");

	    rules.footer();
end
