package life.genny.rules;

import life.genny.rules.QRules;

import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QEventAttributeValueChangeMessage;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.MergeUtil;
import life.genny.qwanda.entity.BaseEntity;




/*   Rule to handle load category selection   */
rule "Handle Load Category Selection"
    when
        $m: QEventAttributeValueChangeMessage( event_type == "EVT_ATTRIBUTE_VALUE_CHANGE" && QEventAttributeValueChangeMessage.getData().getCode().equals("LNK_LOAD_CATEGORY_LISTS") )
        rules: QRules()
     then
        rules.header();
        
          rules.println("Print QEventAttributeValueChangeMessage ::  "+$m.toString());
 
       /*  Collect load code from answer  */
         Answer answer = $m.getAnswer();
         rules.println("The created value  ::  "+answer.getCreatedDate());
         rules.println("Answer from QEventAttributeValueChangeMessage  ::  "+answer.toString());
         String targetCode = answer.getTargetCode();
         String sourceCode = answer.getSourceCode();
         String loadCategoryCode = answer.getValue();
         String attributeCode = $m.data.getCode();
         rules.println("The target BE code is   ::  " +targetCode);
         rules.println("The source BE code is   ::  " +sourceCode);
         rules.println("The attribute code is   ::  " +attributeCode);
         rules.println("The load type code is   ::  " +loadCategoryCode);
         
         BaseEntity loadType = rules.getBaseEntityByCode(loadCategoryCode);
           
        /* creating new Answer */
       Answer newAnswer = new Answer(answer.getSourceCode(),answer.getTargetCode(),"PRI_LOAD_TYPE",loadType.getName());
       newAnswer.setInferred(true);
       
  		rules.saveAnswer(newAnswer);        
         rules.footer();

end
