package life.genny.rules;
import life.genny.rules.QRules;

import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QEventAttributeValueChangeMessage;
import life.genny.qwandautils.MergeUtil;


rule "Listen Attribute Change - PRI_DRIVER_CONFIRMED_DELIVERY"
ruleflow-group 'AttributeChange'
    when
        $m: QEventAttributeValueChangeMessage( data.getCode() == "PRI_DRIVER_CONFIRMED_DELIVERY" )
        rules : QRules( isState("ATTRIBUTE_CHANGE") && !isState("SENT_DELIVERY_MESSAGES") )
     then    
      	rules.header();
 
       /* rules.publishData(new QDataAnswerMessage($m.getAnswer()));  */
        String[] recipientCodes = rules.getRecipientCodes($m);
        String jobCode = $m.getBe().getCode();
        
        BaseEntity jobBe = $m.getBe();
        String offerCode = jobBe.getValue("STT_HOT_OFFER",null);
        BaseEntity offerBe = rules.baseEntityUtils.getBaseEntityByCode(offerCode);
        String quoterCode = offerBe.getValue("PRI_QUOTER_CODE", null);
       
        /* String offerCode = MergeUtil.getAttrValue(jobCode, "STT_HOT_OFFER", rules.getToken());
        BaseEntity offerBe = MergeUtil.getBaseEntityForAttr(offerCode, rules.getToken());
		String quoterCode = MergeUtil.getBaseEntityAttrValueAsString(offerBe, "PRI_QUOTER_CODE"); */
        
        HashMap<String, String> contextMap = new HashMap<String, String>();
		contextMap.put("JOB", jobCode);
		contextMap.put("DRIVER", quoterCode);
				    		
		rules.sendMessage("OK", recipientCodes, contextMap, "MSG_CH40_DELIVERED", "TOAST");
		rules.sendMessage("OK", recipientCodes, contextMap, "MSG_CH40_DELIVERED", "SMS");
		rules.sendMessage("OK", recipientCodes, contextMap, "MSG_CH40_DELIVERED", "EMAIL");
        
 
     	rules.setState("SENT_DELIVERY_MESSAGES");
   	    rules.footer();
  
end