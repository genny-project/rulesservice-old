package life.genny.rules;

import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QEventAttributeValueChangeMessage;
import life.genny.qwanda.entity.BaseEntity;
import io.vertx.core.json.JsonObject;
import io.vertx.core.json.JsonArray;

rule "Load Title Attribute Change"
/*  Update Jobs title based on Loads name value change  */
    when
    $m: QEventAttributeValueChangeMessage(  data.code == "PRI_NAME"  && getAnswer().getTargetCode().startsWith("LOD_") )
    	rules : QRules( isState("STARTED") &&  !isState("LD_TITLE_CHG"))
    then
    	    rules.header();
	    rules.setState("LD_TITLE_CHG");
         Answer newAnswer = $m.getAnswer();
         BaseEntity load = $m.getBe();
        // BaseEntity load = rules.baseEntity.getBaseEntityByCode(newAnswer.getTargetCode());

         rules.println("The load value is "+load);
         load.setName(newAnswer.getValue());
         rules.println("The updated laod name before PUT "+load.getName());
         /* Update Load BaseEntity   */
         rules.baseEntity.updateBaseEntity(load);
         rules.println(" Load Baseentity Updated  " );
         rules.println("The updated laod name after PUT is "+load.getName());
         rules.println(" Inside the Load Title Attribute Change  rule  "   );
         rules.println("The created value  ::  "+newAnswer.getCreatedDate());
         rules.println("Answer from QEventAttributeValueChangeMessage in Load Title Attribute Change ::  "+newAnswer.toString());

         String loadTitle = newAnswer.getValue();
         rules.println("The new load title is     ::"  +loadTitle );

       /* Get the sourceCode(Job code) for this LOAD */
         BaseEntity job = rules.baseEntity.getParent(newAnswer.getTargetCode(), "LNK_BEG");

         Answer jobTitleAnswer = new Answer(rules.getUser().getCode() ,job.getCode(), "PRI_TITLE" ,loadTitle);
         //rules.publishData(jobTitleAnswer);
         rules.baseEntity.saveAnswer(jobTitleAnswer);

           Answer jobNameAnswer = new Answer(rules.getUser().getCode() ,job.getCode(), "PRI_NAME" ,loadTitle);
         //rules.publishData(jobTitleAnswer);
         rules.baseEntity.saveAnswer(jobNameAnswer);

        rules.footer();


end
