package life.genny.rules;

import life.genny.rules.QRules;

rule "Delete job"
	when
		rules: QRules( isState("EVENT_BTN_CLICK") && isState("BTN_DELETE_BEG") && !isState("JOB_MOVED_TO_BIN") )
	then
	
		rules.header();

		rules.setState("JOB_MOVED_TO_BIN");

		Object begCodeObj = rules.get("itemCode");
		Object groupCodeObj = rules.get("parentCode");
		String begCode = null;
		String groupCode = null;

         if(begCodeObj != null && groupCodeObj != null ){
         
             begCode = begCodeObj.toString();
             groupCode = groupCodeObj.toString();
             rules.println("The begCode is :: "+begCode);
             rules.println("The parentCode is :: "+groupCode);
             
             if(begCode != null && groupCode != null){
             
             	String[] allBegRecipients = VertxUtils.getSubscribers(rules.realm(), begCode);
				rules.clearBaseEntity(begCode, groupCode, allBegRecipients);

			   	/* Moving the BEG  */
		        rules.baseEntity.moveBaseEntitySetLinkValue(begCode, groupCode, "GRP_BIN", "LNK_CORE", "BEG");
		        
		        /*  publishing beg again as it was deleted and will be needed for GRP_BIN again  */
		        rules.publishBaseEntityByCode(begCode);
		        
		        rules.setState("DATA_SENT_FINISHED");
		        rules.setState("TRIGGER_HOMEPAGE");
		        
		        if( groupCode.equalsIgnoreCase("GRP_NEW_ITEMS") ){
			       	/* Sending Messages */
			       HashMap<String,String> contextMap = new HashMap<String, String>();
			       contextMap.put("JOB", begCode);
			       contextMap.put("OWNER", rules.getUser().getCode());
					
			       /* Sending toast message to all the beg frontends */
			        rules.sendMessage("", allBegRecipients, contextMap, "MSG_CH40_NEW_JOB_DELETED", "TOAST");
		         }
		
		    	   rules.reloadCache();  
		     }
         
         }     

	    rules.footer();
end
