package life.genny.rules;

import life.genny.rules.QRules;
import life.genny.qwanda.message.QEventMessage;
import life.genny.utils.PaymentUtils;
import java.util.List;
import life.genny.qwanda.payments.QPaymentsAuthorizationToken.AuthorizationPaymentType;

rule "User Payments Methods"
    when
        m : QEventMessage( event_type == "PAYMENT_METHODS" && data.code == "PAYMENT_METHODS" )
 		rules: QRules( !isState("USER_PAYMENT_METHOD_CREATED") )

    then

    	rules.header();

    	/* Save token answers */
        String assemblyAuthKey = PaymentUtils.getAssemblyAuthKey();
       	String assemblyId = rules.baseEntity.getBaseEntityValueAsString(rules.getUser().getCode(), "PRI_ASSEMBLY_USER_ID");

       	if(assemblyId != null) {

       		rules.println("Refreshing tokens");

  			String oneTimeTransactionCardToken = null;
  			String oneTimeTransactionBankToken = null;
       		oneTimeTransactionCardToken = rules.fetchOneTimePaymentsToken(assemblyId, assemblyAuthKey, AuthorizationPaymentType.card);
       		oneTimeTransactionBankToken = rules.fetchOneTimePaymentsToken(assemblyId, assemblyAuthKey, AuthorizationPaymentType.bank);

			Answer cardTokenAnswer = new Answer(rules.getUser().getCode(), rules.getUser().getCode(), "PRI_ASSEMBLY_CARD_TOKEN", oneTimeTransactionCardToken);
			Answer bankTokenAnswer = new Answer(rules.getUser().getCode(), rules.getUser().getCode(), "PRI_ASSEMBLY_BANK_TOKEN", oneTimeTransactionBankToken);

			List<Answer> answers = new ArrayList<Answer>();
			answers.add(cardTokenAnswer);
			answers.add(bankTokenAnswer);

			rules.baseEntity.saveAnswers(answers);


			rules.println("***** ONE TIME TOKEN "+oneTimeTransactionCardToken);
			rules.println("***** ONE TIME TOKEN "+oneTimeTransactionBankToken);

       	}

        String userCode = rules.getUser().getCode();
        rules.sendQuestions(userCode, userCode, "QUE_PAYMENT_METHOD_GRP", true);
 		rules.sendSublayout("PAYMENT_METHODS", "user-profile-payment-methods.json");

 		rules.setState("USER_PAYMENT_METHOD_CREATED");

		rules.footer();
end
