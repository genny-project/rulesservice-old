package life.genny.rules;

import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;

import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.entity.BaseEntity;


rule "User-Profile"
    when
       m : QEventMessage( event_type == "PROFILE" && data.code == "PROFILE"  )
       rules: QRules( isState("STARTED") )
    then
        rules.header();
        BaseEntity user = rules.getUser();
  	    String userCode = user.getCode();

  	    drools.setFocus("ispayments");  /* NOW Set up Payments */


        rules.sendQuestions(userCode,userCode,"QUE_USER_PROFILE_GRP");
       /*  Get Company Code of the current user   */
        BaseEntity company = rules.baseEntity.getParent(userCode, "LNK_STAFF");
        if(company != null)
        {
            rules.println("Company BE is  :: "+company.toString());
            String companyCode = company.getCode();
            rules.println("The Company Code is :: "+companyCode);
           /*    Send Company asks   */
            rules.sendQuestions(userCode, companyCode, "QUE_USER_COMPANY_GRP");

        }

        /*  Send Bank Details asks   */
          rules.sendQuestions(userCode, userCode, "QUE_PAYMENT_METHOD_GRP");

        if( rules.isUserSeller(user) ){

          /* Sendf user profile questions */
          rules.sendQuestions(userCode,userCode,"QUE_SELLER_GRP");

          /*   Getting list of the load category   */
          /* rules.sendSelections("GRP_LOAD_CATEGORY", "LNK_CORE", 20); */

          /*  Send User Documents asks   */
           rules.sendQuestions(userCode, userCode, "QUE_DRIVER_LOAD_TYPES_GRP");

          /*  Send User Documents asks   */
           rules.sendQuestions(userCode, userCode, "QUE_USER_DOCUMENTS_GRP");

	      /* Send Driver SubLayout  */
		   rules.sendSublayout("SUB_USER_PROFILE", "user-profile-driver.json");
	    }
	    else
      {

          rules.sendQuestions(userCode,userCode,"QUE_BUYER_GRP");

          /* Send Owner SubLayout  */
		        rules.sendSublayout("SUB_USER_PROFILE", "user-profile-owner.json");
	    }


       rules.footer();
end
