

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;

rule "TV_SELECT Event"
     when
       $m : QEventMessage( event_type == "TV_SELECT")
       rules: QRules()
     then

     rules.header();

        /* TODO: refactor this. */
       	String grpCode = $m.getData().getValue();
        if(!grpCode.equals("GRP_MESSAGES") && grpCode.contains("GRP_") && !grpCode.equals("GRP_ADMIN") && !grpCode.equals("GRP_ADMIN_USERS") && !grpCode.equals("GRP_ADMIN_JOBS")) {

	        if( grpCode.equals("GRP_DASHBOARD") ) {
	             rules.sendSublayout("bucket-dashboard", "dashboard_channel40.json", "GRP_DASHBOARD");
	        		/*drools.setFocus("SendLayoutsAndData");*/
	         }
	   /*      else if( grpCode.equals("GRP_DASHBOARD") && rules.getUser().is("PRI_DRIVER") ){
	            rules.sendSublayout("bucket-dashboard", "dashboard_channel40.json", "GRP_DASHBOARD");
	         } */
	        else {

		        	/* sending cmd LIST_VIEW */
		    	     QCmdMessage cmdBucketView = new QCmdMessage("CMD_VIEW", "LIST_VIEW");
		    	     JsonObject bucketViewJson = new JsonObject().mapFrom(cmdBucketView);
		    	     bucketViewJson.put("root", grpCode);
		    	     bucketViewJson.put("token", rules.getToken());
		    	     rules.publish("cmds",bucketViewJson);
	        }
        }
        else {

        		Boolean sendTable = false;
        		if(grpCode.equals("GRP_ADMIN_USERS")) {

        			rules.showLoading("Getting list of users...");

        			 /* we send the list of users */
        			List<BaseEntity> totalList = new ArrayList<BaseEntity>();
        			List<BaseEntity> people = rules.getBaseEntitysByParentAndLinkCode("GRP_PEOPLE","LNK_CORE", 0, 100, false) ;
        			totalList.addAll(people);

        			List<BaseEntity> users = rules.getBaseEntitysByParentAndLinkCode("GRP_USERS","LNK_CORE", 0, 100, false) ;
        			totalList.addAll(users);

        			rules.publishCmd(totalList, grpCode, "LNK_CORE");

        			/* send list users layout */
        			rules.sendSublayout("admin-user-list", "admin_users_channel40.json");

        			sendTable = false;

        		}
        		else if(grpCode.equals("GRP_ADMIN_JOBS")) {

        			rules.showLoading("Getting list of jobs...");

        			/* we send the list of jobs */
        			List<BaseEntity> totalList = new ArrayList<BaseEntity>();
        			List<BaseEntity> buckets = rules.getBaseEntitysByParentAndLinkCode("GRP_DASHBOARD", "LNK_CORE", 0, 100, false) ;

        			for (BaseEntity bucket : buckets )
        	     	{
        	     		List<BaseEntity> bucketBegs = rules.getBaseEntitysByParentAndLinkCode(bucket.getCode(),"LNK_CORE", 0, 500, false) ;
        	     		totalList.addAll(bucketBegs);
        	     	}

        			rules.publishCmd(totalList, grpCode, "LNK_CORE");
        			sendTable = true;
        		}

    			if(sendTable) {

    				 /* we send the table */
    	   			 QCmdMessage cmdBucketView = new QCmdMessage("CMD_VIEW", "TABLE_VIEW");
    	   	    	     JsonObject bucketViewJson = JsonObject.mapFrom(cmdBucketView);
    	   	    	     bucketViewJson.put("root", grpCode);
    	   	    	     bucketViewJson.put("token", rules.getToken());
    	   	    	     rules.publish("cmds",bucketViewJson);
    			}
        }

     rules.footer();
end
