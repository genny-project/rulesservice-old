package life.genny.rules;

import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;
import life.genny.qwandautils.MergeUtil;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.MessageUtils;
import life.genny.qwandautils.MergeUtil;
import life.genny.qwandautils.KeycloakUtils;
import org.apache.commons.lang3.StringUtils;

import life.genny.qwanda.Answer;
import life.genny.qwanda.Ask;
import life.genny.qwanda.Link;
import life.genny.qwanda.DateTimeDeserializer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.User;

import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QMessage.MessageData;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QCmdViewMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QMSGMessage;
import life.genny.qwanda.message.QBaseMSGMessageType;

import io.vertx.core.buffer.Buffer;
import io.vertx.core.json.JsonObject;
import io.vertx.core.json.JsonArray;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;

import java.lang.reflect.Type;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;

rule "Make Offer"
    when
        $m : QEventBtnClickMessage( event_type == "BTN_CLICK" && data.code == "BTN_MAKE_OFFER")
        rules: QRules(!isState("SUBMIT_QUOTE"))
    then
        rules.header();
        rules.setState("SUBMIT_QUOTE");
        /* Prepare Token & qwandaServiceUrl */
            String qwandaServiceUrl = rules.getQwandaServiceUrl();
            String tokenString = rules.getToken();

        /* Get begCode, username, userCode, userFullName */
            String begCode = $m.getItemCode();
            rules.println("begCode  ::   "+ begCode);    

            String userCode = rules.getUser().getCode();
            rules.println("userCode   ::   "+ userCode);

            String userName = rules.getAsString("preferred_username");
            rules.println("username   ::   "+ userName);         

            String userFullName = rules.getFullName(rules.getUser());
		    rules.println("user fullName   ::   " + userFullName);
        
            String linkCode= "LNK_BEG";
            String linkOffer= "OFFER";
            String linkQuoter= "QUOTER";
            String offerCode= "null";
            
         /* Check if a link exists between BEG & OFFER */
            /* Boolean linkBegQuoter = QwandaUtils.checkIfLinkExistsForTarget(begCode,  linkCode, linkQuoter, tokenString ); */
            Boolean linkExists = QwandaUtils.checkIfLinkExists(begCode, linkCode, userCode, "QUOTER", tokenString);
            rules.println("LINK EXISTS FOR BEG & QUOTER ?  ::    "+ linkExists);
            
            if(linkExists){           
               rules.println( "The baseEntity offer is"+rules.getOfferBaseEntity(begCode, linkCode, linkOffer, userCode, tokenString) );
               BaseEntity oldOffer =  rules.getOfferBaseEntity(begCode, linkCode, linkOffer, userCode, tokenString);
               offerCode = oldOffer.getCode();
           }
           
          if(!linkExists){ 

        		/* Create Offer BE */
	          BaseEntity offer = rules.createBaseEntityByCode(userCode , "OFR", "Offer");
	          RulesUtils.ruleLogger("OFFER Base Entity", offer);
	          /* Get Offer Code */
	          offerCode = offer.getCode();
	          rules.println("offerCode   ::   "+offerCode);
            
           /* Save attributes for OFFER as answer */
             Answer offercode = new Answer(userCode, offerCode, "PRI_OFFER_CODE", offerCode);
             Answer quoterCode = new Answer(userCode, offerCode, "PRI_QUOTER_CODE", userCode);
             Answer quoterUname = new Answer(userCode, offerCode, "PRI_QUOTER_USERNAME", userName);
             Answer quoterFullName = new Answer(userCode, offerCode, "PRI_QUOTER_FULLNAME", userFullName);
             Answer jobCode = new Answer(userCode, offerCode, "PRI_BEG_CODE", begCode);
            
              List<Answer> answerList = new ArrayList<Answer>();	
              answerList.add(offercode);
              answerList.add(quoterCode);
              answerList.add(quoterUname);
              answerList.add(quoterFullName);
              answerList.add(jobCode);

			  rules.saveAnswers(answerList);
              rules.publishData(answerList);  
            
             }       

        /* Send Offer Questions */
            rules.askQuestions(userCode, offerCode, "QUE_OFFER_DRIVER_GRP", false, true); /* false for form_view*/
            
        rules.footer();
end