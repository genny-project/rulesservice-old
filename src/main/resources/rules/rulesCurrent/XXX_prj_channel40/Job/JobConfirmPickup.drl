
import life.genny.rules.QRules;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.rules.RulesUtils;
import io.vertx.core.json.JsonObject;
import java.util.HashMap;
import java.util.ArrayList;
import life.genny.qwanda.Link;

rule "Manually Confirm Pickup"
when
        $m : QEventBtnClickMessage( event_type == "BTN_CLICK" && data.code == "BTN_CONFIRM_PICKUP")
  		rules: QRules( !isState("CONFIRMED_PICKUP") )
then
         rules.header();
                  
		rules.setState("CONFIRMED_PICKUP");
		
  		     String begCode = $m.getItemCode();
		     if(begCode != null) {
		    	 	//rules.moveBaseEntity(begCode, "GRP_APPROVED", "GRP_IN_TRANSIT","LNK_CORE");
		    	 	rules.moveBaseEntitySetLinkValue(begCode, "GRP_APPROVED",	"GRP_IN_TRANSIT", "LNK_CORE", "BEG"); 
		     }
		     
		/* To save pick-up time as an attribute of a job */
		Answer pickupTimeAnswer = new Answer(begCode, begCode, "PRI_DRIVER_CONFIRM_PICKUP_DATETIME", rules.getZonedCurrentLocalDateTime());
		rules.saveAnswer(pickupTimeAnswer);
		
		/* To find the owner of a job */
		String ownerCode = null;
		String loadCode = null;
		
		List<Link> links = rules.getLinks(begCode, "LNK_BEG");
		if (links != null) {
			for (Link link : links) {

					String linkValue = link.getLinkValue();
					if (linkValue != null && linkValue.equals("OWNER")) {
						ownerCode = link.getTargetCode();
						rules.println("owner of the job ::"+ownerCode);
					}
					
					if(linkValue != null && linkValue.equals("LOAD")) {
		   				loadCode = link.getTargetCode();
		  			 }
				}
		}
			
		/* To send email to owner when load is picked up */		 
		HashMap<String, String> contextMap = new HashMap<String, String>();
		contextMap.put("JOB", begCode);
		contextMap.put("DRIVER", rules.getUser().getCode());
		contextMap.put("LOAD", loadCode);
		
		String[] recipientArr = { ownerCode };
		     
		rules.sendMessage("", recipientArr, contextMap, "MSG_CH40_LOAD_PICKUP", "EMAIL");
		
		
		

		rules.footer();

end