package life.genny.rules;

import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;
import life.genny.qwandautils.MergeUtil;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwandautils.MessageUtils;
import life.genny.qwandautils.MergeUtil;
import life.genny.qwandautils.PaymentUtils;
import life.genny.qwandautils.KeycloakUtils;
import org.apache.commons.lang3.StringUtils;

import life.genny.qwanda.Answer;
import life.genny.qwanda.Ask;
import life.genny.qwanda.Link;
import life.genny.qwanda.DateTimeDeserializer;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.entity.User;

import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QMessage.MessageData;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventBtnClickMessage;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwanda.message.QMSGMessage;
import life.genny.qwanda.message.QBaseMSGMessageType;

import io.vertx.rxjava.core.eventbus.EventBus;
import io.vertx.core.buffer.Buffer;
import io.vertx.core.json.JsonObject;
import io.vertx.core.json.JsonArray;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.JsonPrimitive;
import com.google.gson.JsonSerializationContext;
import com.google.gson.FieldNamingPolicy;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;

import java.lang.reflect.Type;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;

rule "Job Confirm Delivery - Driver"
when
  $m : QEventMessage( event_type == "BTN_CLICK" && data.code == "BTN_CONFIRM_DELIVERY_DRIVER")
  rules: QRules()
then
    
		RulesUtils.header(drools.getRule().getName());
  		
  		String data = $m.getData().getValue();      
  		if(data != null) {
  			
		     JsonObject dataJson = new JsonObject(data);
		     String begCode = dataJson.getString("itemCode");
		     if(begCode != null) {
		    	 
		    	 	/* mark job as delivered by driver */
	            rules.updateBaseEntityAttribute(begCode, begCode, "PRI_DRIVER_CONFIRMED_DELIVERY", "true");
		    	 	
		    	 	HashMap<String, String> contextMap = new HashMap<String, String>();
			    contextMap.put("JOB", begCode);
			    
			    String[] recipients = new String[1];
		    		recipients[0] = rules.getUser().getCode();
		    		rules.sendMessage(begCode, recipients, contextMap, "MSG_CH40_DELIVERED", "TOAST");
		    		rules.sendMessage(begCode, recipients, contextMap, "MSG_CH40_DELIVERED", "SMS");
		    		rules.sendMessage(begCode, recipients, contextMap, "MSG_CH40_DELIVERED", "EMAIL");
		     }
		}

		RulesUtils.footer(drools.getRule().getName());

end