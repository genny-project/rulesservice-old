package life.genny.rules;

import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.GPS;
import io.vertx.rxjava.core.eventbus.EventBus;
import io.vertx.core.json.JsonObject;
import io.vertx.core.json.JsonArray;
import java.util.Map;
import java.util.List;
import com.google.gson.GsonBuilder;
import java.util.ArrayList;

import life.genny.qwanda.message.QDataGPSMessage;
import life.genny.qwandautils.QwandaUtils;
import life.genny.rules.RulesUtils;
import life.genny.qwandautils.GPSUtils;

import life.genny.qwanda.Answer;

rule "Receive GPS Data"
	
    when
	    m : QDataGPSMessage()
	    rules: QRules( isRealm("channel40") )
     then
     	     			
        BaseEntity user = rules.getUser();
        GPS driverPosition = m.getItems()[0];
	    	String driverLatitude = driverPosition.getLatitude();
	    	String driverLongitude = driverPosition.getLongitude();
	    	
	    	if(driverLatitude != null && driverLongitude != null) {
	    		
	    		    List<BaseEntity> jobsInTransit = rules.getBaseEntitysByAttributeAndValue("STT_IN_TRANSIT", rules.getUser().getCode());
	     		RulesUtils.println(jobsInTransit.toString());
	     			
	     		for(BaseEntity be: jobsInTransit) {
	     			
	     			String begCode = be.getCode();	     			
	     			String deliveryLatitudeString = rules.getBaseEntityValueAsString(begCode, "PRI_DROPOFF_ADDRESS_LATITUDE");
	     			String deliveryLongitudeString = rules.getBaseEntityValueAsString(begCode, "PRI_DROPOFF_ADDRESS_LONGITUDE");
	     			String totalDistanceString = rules.getBaseEntityValueAsString(begCode, "PRI_TOTAL_DISTANCE_M");
	     			
	     			/* Call Google Maps API to know how far the driver is */
	    	     		Double distance = GPSUtils.getDistance(driverLatitude, driverLongitude, deliveryLatitudeString, deliveryLongitudeString);
	    	     		Double totalDistance = Double.parseDouble(totalDistanceString);
	    	    			Double percentage = 100.0 * (totalDistance - distance) / (totalDistance);
	    	    			percentage = percentage < 0 ? 0 : percentage;
	    	     		
	    	    			/* Update progress of the BEG */
	    	    		    rules.updateBaseEntityAttribute(be.getCode(), be.getCode(), "PRI_PROGRESS", percentage.toString());

	    	    		    /* update position of the beg */
	    	    		    rules.updateBaseEntityAttribute(be.getCode(), be.getCode(), "PRI_POSITION_LAT", driverLatitude);
	    	    		    rules.updateBaseEntityAttribute(be.getCode(), be.getCode(), "PRI_POSITION_LON", driverLongitude);
	     		}
	    	}
 		    	
end
