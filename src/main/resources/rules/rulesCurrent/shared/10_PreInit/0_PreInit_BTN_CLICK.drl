package life.genny.rules;

import life.genny.rules.QRules;
import life.genny.qwanda.message.QEventMessage;
import io.vertx.core.json.JsonObject;

rule "Pre Init Btn Click"
	no-loop true
	ruleflow-group 'Init'
    when
	  m : QEventMessage( event_type == "BTN_CLICK" )
	  rules: QRules(!isState("STARTED"))
     then
        rules.setDrools(drools);
        rules.println("RULE INIT BTN_CLICK: "+m);

        String btnCode = m.getData().getCode(); /* TODO : remove this if unused */
        String quesCode = m.getData().getCode(); /* TODO: use this, don't remove. */

        String dataString = m.getData().getValue();

        try {

          JsonObject dataJson = new JsonObject(dataString);

          /* Get targetCode */
          String targetCode = dataJson.getString("targetCode");
          rules.println("targetCode   ::   " + targetCode);

          /* Get itemCode */
          String itemCode = dataJson.getString("itemCode");
          rules.println("itemCode   ::   " + itemCode);

          /* Get hintCode */
          String hintCode = dataJson.getString("hint");
          rules.println("hintCode   ::   " + hintCode);
          
          /* Get messageCode */
          String messageCode = dataJson.getString("message");
          rules.println("messageCode   ::   " + messageCode);

          /* Get actionCode */
          String actionCode = dataJson.getString("action");
          rules.println("actionCode   ::   " + actionCode);

          /* Get message */
          String message = dataJson.getString("message");
          rules.println("message   ::   " + message);

          /* Get userCode */
          String userCode = dataJson.getString("userCode");
          rules.println("userCode  ::  " + userCode);
          
          /* Get rootCode */
          String rootCode = dataJson.getString("root");
          rules.println("rootCode  ::  " + rootCode);

          if(targetCode != null) {
            rules.set("targetCode", targetCode);
          }

          if(itemCode != null) {
            rules.set("itemCode", itemCode);
          }

          if(hintCode != null) {
            rules.set("hintCode", hintCode);
          }

          if(message != null) {
              rules.set("message", message); /* if it's not being used, remove this and use the one below. */
          }

           if(userCode != null) {
              rules.set("userCode", userCode); 
          }

          if(messageCode != null) {
            rules.set("messageCode", messageCode); /* anish added this, use this one */
          }
         
          if(rootCode != null) {
            rules.set("rootCode", rootCode);
          }
        }
        catch( Exception e) {
            rules.println("button click event   ::   " +  m.getData());
        }

        /* Remove thiis if unused */
        if(btnCode != null) { 
          rules.setState(btnCode);
        }

        /* Use this */
        if(quesCode != null) {
          rules.setState(quesCode);
        }

        rules.setState("STARTED");
        rules.setState("EVENT_BTN_CLICK");
        rules.setState("EVENT_BUTTON_CLICK");

end
