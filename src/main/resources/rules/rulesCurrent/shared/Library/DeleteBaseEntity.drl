package life.genny.rules;
import life.genny.rules.QRules;
import life.genny.qwanda.message.QEventBtnClickMessage;

rule "Delete BaseEntity"
	when
	    rules: QRules( isState("DELETE_BASE_ENTITY") && !isState("LOOP_DELETE_BASE_ENTITY"))
	 then
	    rules.header();

        rules.setState("LOOP_DELETE_BASE_ENTITY");
		rules.clearState("DELETE_BASE_ENTITY");

        /* we grab the code of the deleted base entity */
        String beCode = rules.getAsString("beCode");
        String sourceCode = rules.getAsString("sourceCode");

        /* optinal variables */
        String targetCode = rules.getAsString("targetCode");
        String linkValue = rules.getAsString("linkValue");
        String linkCode = rules.getAsString("linkCode");

        /* if we don't have the base entity code to delete, we exit. Same if we don't have the source */
 		if (beCode == null || sourceCode == null) {
            rules.println("Delete BaseEntity: missing beCode.");
            rules.setState("FAILED_DELETE_BASE_ENTITY");
        }
           
        /* we do not properly delete the base entity, we move it to another group. default group: GRP_BIN. Can be overitten by passing 'targetCode' */
        if(targetGroupCode == null) {
            targetGroupCode = "GRP_BIN";
        }

        /* we move the base entity */
        rules.baseEntity.moveBaseEntity(beCode, sourceCode, targetGroupCode, linkCode, linkValue);

	    rules.footer();
end
