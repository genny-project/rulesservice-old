package life.genny.rules;
import life.genny.rules.QRules;

rule "Trigger Select Item"
	when
		rules: QRules(  isState("EVENT_BTN_CLICK") &&
						isState("SELECT_EVENT") && 
						!isState("LOOP_TRIGGER_SELECT_ITEM")) 
	 then
	 	rules.header();
		rules.setState("LOOP_TRIGGER_SELECT_ITEM");
		
		rules.setState("TRIGGER_SELECT_ITEM");
 		String grpCode = rules.getAsString("hintCode");
		String[] recipient = { rules.getUser().getCode() }; 

		if(grpCode != null){
			if( grpCode.equals("GRP_NEW_ITEMS") ){
			
 				String begCode = rules.getAsString("itemCode");
				if(begCode != null){
					BaseEntity beg = rules.getBaseEntityByCode(begCode);
					if(beg != null){
						rules.println("beg  ::  " + beg.getCode());
						List<BaseEntity> applications = rules.getChildrens(beg.getCode(), "LNK_BEG", "APPLICATION");
						if(applications != null){
							rules.printList("applications",applications);

							List<BaseEntity> buckets = rules.getBaseEntitysByParentAndLinkCode("GRP_APPLICATIONS", "LNK_CORE", 0, 20, false);
							if (buckets != null) {
								rules.printList("buckets", buckets);
								
								/* Send buckets with delete true */
								rules.clearBaseEntity(buckets, recipient);

								/* subscribe to all the begs of the company */
								rules.subscribeUserToBaseEntities(rules.getUser().getCode(), buckets);
								rules.publishCmd(buckets, "GRP_APPLICATIONS", "LNK_CORE");

							}else{
								rules.println("buckets is null");
							}

							/* subscribe to all the applications of the beg */
							rules.subscribeUserToBaseEntities(rules.getUser().getCode(), applications);
							rules.publishCmd(applications, beg.getCode(), "LNK_BEG");
						}else{
							rules.println("beg has no applications");
						}
					}else{
						rules.println("beg is null");
					}
				}else{
					rules.println("begCode is null");
				}
			}

			if(grpCode.equals("GRP_APPLICATIONS")){
				String bucketCode = rules.getAsString("itemCode");
				if(bucketCode != null){
					rules.println("BUCKET NAME  ::  " + bucketCode);
					List<BaseEntity> applications = rules.getBaseEntitysByParentAndLinkCode(bucketCode, "LNK_CORE", 0, 500, false);
					
					if(applications != null){
						rules.printList("applications", applications);
						
						/* subscribe to all the applications of the bucket */
						rules.subscribeUserToBaseEntities(rules.getUser().getCode(), applications);
						rules.publishCmd(applications, bucketCode, "LNK_CORE");

						rules.sendSplitView(grpCode, bucketCode);

					}else{
						rules.println("bucket has no applications");
					}
				}else{
					rules.println("bucketCode is null");
				}	
			}
		}else{
			rules.println("hintCode is null");
		}				
	 	rules.footer();      
end
