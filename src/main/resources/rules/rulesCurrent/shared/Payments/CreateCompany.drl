package life.genny.rules;

import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;

import life.genny.qwanda.Answer;

import life.genny.qwandautils.PaymentUtils;
import life.genny.qwandautils.MergeUtil;


rule "Create Payments Assembly Company"
	agenda-group "payments"
	no-loop true
	when 
		rules: QRules(isState("NEW_ASSEMBLY_COMPANY_CREATED") && !isState("IS_ASSEMBLY_COMPANY_CREATED") ) 
	then
		RulesUtils.header(drools.getRule().getName());
		
		
		 /* get assembly authKey   */
    	String assemblyAuthToken = PaymentUtils.getAssemblyAuthKey();
    	
    	/*  Gets assembly userId */
    	String assemblyId = MergeUtil.getAttrValue(rules.getUser().getCode(), "PRI_ASSEMBLY_USER_ID", rules.getToken());
    	
     	
     	RulesUtils.println("Company not found for user..So creating a Company now..");
    		
     	if(assemblyId != null) {
				
			/* Create Assembly Company for user */
			String companyId = PaymentUtils.createCompany(assemblyAuthToken, rules.getToken());
		
			/* Save companyId as an attribute for the user */
			RulesUtils.println("create payment company response -"+companyId);
			if(companyId != null) {
				
    	 		Answer assemblyCompanyIdAnswer = new Answer(rules.getUser().getCode(), rules.getUser().getCode(), "PRI_ASSEMBLY_COMPANY_ID", companyId);
    	 		PaymentUtils.saveAnswer(rules.getQwandaServiceUrl(), assemblyCompanyIdAnswer, rules.getToken());
     			RulesUtils.println("Assembly Company created");
     			rules.setState("IS_ASSEMBLY_COMPANY_CREATED");
     				
			}
		}
     	
     	
     	     			
		RulesUtils.footer(drools.getRule().getName());
end