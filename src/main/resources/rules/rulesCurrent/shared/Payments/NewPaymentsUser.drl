package life.genny.rules;

import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;
import life.genny.qwanda.Answer;
import life.genny.qwandautils.PaymentUtils;


rule "New Payments User"
	agenda-group "payments"
	no-loop true
    when
    	rules: QRules( isState("NEW_ASSEMBLY_USER_CREATION") && !isState("IS_ASSEMBLY_USER_CREATED") )
    then
     
     RulesUtils.header(drools.getRule().getName());
     	     
     /* get assembly authKey   */
     String assemblyAuthToken = PaymentUtils.getAssemblyAuthKey();
     
     /*  Creates assembly userId */
     String assemblyId = PaymentUtils.getAssemblyId(rules.getToken());
     
     			
     /* logic to create assembly user & set the payments userProfileExists flag  */
     PaymentUtils.createAssemblyUser(assemblyId, assemblyAuthToken, rules.getToken()); 
     	
     /* Creates a new attribute for assembly user ID */
     Answer assemblyIdAnswer = new Answer(rules.getUser().getCode(), rules.getUser().getCode(), "PRI_ASSEMBLY_USER_ID", assemblyId);
     PaymentUtils.saveAnswer(rules.getQwandaServiceUrl(), assemblyIdAnswer, rules.getToken());
    	
     rules.println("assembly ID created in our system ::"+assemblyId);
     RulesUtils.println("Assembly Company created");
     	    
     rules.setState("IS_ASSEMBLY_USER_CREATED");
     drools.setFocus("payments");
 
	 rules.footer();      		      
end