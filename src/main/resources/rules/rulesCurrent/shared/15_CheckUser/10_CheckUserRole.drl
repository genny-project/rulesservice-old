package life.genny.rules;

import life.genny.rules.QRules;
import java.util.List;
import java.util.stream.Collectors;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.qwanda.attribute.EntityAttribute;

rule "Setting user role"
     when
        rules: QRules(  isState("STARTED") &&
                        isUserPresent() == true &&
						            !isState("LOOP_CHECK_ROLE") )
     then
        rules.header();
    	  rules.setState("LOOP_CHECK_ROLE");

      	BaseEntity user = rules.getUser();
      	if(user != null){
      		rules.println("user is   ::   " + user.toString());
      		Boolean has_role_been_found = false;

      		if(user != null) {

      			List<EntityAttribute> roles = user.getBaseEntityAttributes()
      								.stream()
      								.filter(x -> (x.getAttributeCode().contains("PRI_IS")))
      								.collect(Collectors.toList());

      			for(EntityAttribute role: roles) {
      				
      				if(role != null && role.getValue() != null) {
      					
      					Boolean isRole = (role.getValueBoolean() != null && role.getValueBoolean() == true) || (role.getValueString() != null && role.getValueString().equals("TRUE"));
      					if(isRole) {
      						rules.setState(role.getAttributeCode());
      						
      						if(role.getAttributeCode().equals("PRI_IS_PROFILE_COMPLETED") == false && role.getAttributeCode().equals("PRI_IS_ADMIN") == false) {
      							has_role_been_found = true;
      						}
      					}
      				}
      			}
      		}
      		else{
      			rules.println("user is null");
      		}

      		if(has_role_been_found) {
      			rules.setState("ROLE_FOUND");
      		}
      		else {
      			rules.setState("ROLE_NOT_FOUND");
      		}
      	}
      	else {
      		rules.setState("ROLE_NOT_FOUND");
      	}

      	rules.setState("ROLE_CHECKED");
      	rules.footer();
end
