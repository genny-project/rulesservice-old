package life.genny.rules;
import java.util.Map;

import life.genny.rules.QRules;
import java.util.Iterator;

rule "Send Applications For Selected BEG"
	when
		rules: QRules(  isState("DID_SELECT_BEG") &&
						!isState("LOOP_DID_SELECT_BEG")) 
	 then
	 	rules.header();
		rules.setState("LOOP_DID_SELECT_BEG");

        /* we grab the selected item */
        String itemCode = rules.getAsString("itemCode");

		/* Get the recipients */
		BaseEntity user = rules.getUser();
		String[] recipients = {user.getCode()};

        /* we grab the applications */
        List<BaseEntity> applications = rules.getAsBaseEntitys("applications");
        rules.println("itemcode ::" + itemCode + ", number of applications in selected itemcode ::"+ applications.size());
        
        if(applications != null) {
        		
            /* we create a map of messages, the key being the parent of the apps */
            HashMap<String, List<BaseEntity>> parents = new HashMap<>();
            
            /* we loop through the applications */
            for(BaseEntity application: applications) {
            		
            		/* we get the parent */
            		BaseEntity parent = rules.baseEntity.getParent(application.getCode(), "LNK_CORE");
            		if(parent != null) {
            			
            			/* we add the application in the message */
            			if( !parents.containsKey( parent.getCode() ) ) {
            				parents.put(parent.getCode(), new ArrayList<BaseEntity>());
            			}
            			
            			List<BaseEntity> parentApplications = parents.get(parent.getCode());
            			parentApplications.add(application);
            			
            			parents.put(parent.getCode(), parentApplications);
            		}
            }

			/* we replace GRP_APPLICATIONS buckets */
			List<BaseEntity> branches = rules.baseEntity.getLinkedBaseEntities("GRP_APPLICATIONS", "LNK_CORE");
			if(branches != null) {
				for(BaseEntity branch: branches) {
					rules.publishBaseEntityByCode(branch.getCode(), true, 2);
				}
			}
            
            /* we iterate through our messages */
            Iterator it = parents.entrySet().iterator();
		    while (it.hasNext()) {
		        
		    		Map.Entry pair = (Map.Entry)it.next();
		    		
		    		/* we grab the parent and the list of apps */
		    		String parent = (String)pair.getKey();
		    		rules.println("parent ::"+parent);
		    		List<BaseEntity> apps = (List<BaseEntity>)pair.getValue();
		    		rules.println("apps ::"+apps);
		    		
		        it.remove(); /* avoids a ConcurrentModificationException */
		        
		        /* we publish the applications */
		        rules.publishBaseEntityByCode(apps, parent, "LNK_APP", recipients, "APPLICATION", false, true, 2);
		    }
        }
        
        /* THIS IS FOR FRONT_END TO APPLY PROPS FOR "SELECTION OF A BEG" */ 
        /* the itemCode is the BEG code of the selected item */
        /* If the itemCode starts with BEG, we directly save it as the value for PRI_SELECTED_BEG */
        rules.baseEntity.saveAnswer( new Answer(user.getCode(), user.getCode(), "PRI_SELECTED_BEG", itemCode) );

	 	rules.footer();      
end
