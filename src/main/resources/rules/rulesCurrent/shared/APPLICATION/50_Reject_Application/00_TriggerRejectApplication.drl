package life.genny.rules;
import life.genny.rules.QRules;

rule "Trigger Reject Application"
	when
		rules: QRules(  isState("EVENT_BTN_CLICK") &&
						isState("BTN_REJECT_APPLICATION") && 
						!isState("LOOP_TRIGGER_REJECT_APPLICATION")) 
	 then
	 	rules.header();
		rules.setState("LOOP_TRIGGER_REJECT_APPLICATION");
	   	String applicationCode = rules.getAsString("itemCode");
		if(applicationCode != null){

			BaseEntity application = rules.getBaseEntityByCode(applicationCode);
			if(application != null){
            	String applicantCode = application.getLoopValue("PRI_APPLICANT_CODE" , null);

				BaseEntity applicant = rules.getChildren(applicationCode, "LNK_APP", "APPLICANT");
				BaseEntity beg = rules.getParent(applicationCode, "LNK_BEG");
				BaseEntity hostCompany = rules.getChildren(beg.getCode(), "LNK_BEG", "COMPANY");
				//BaseEntity eduProvider = rules.getChildren(beg.getCode(), "LNK_BEG", "EDUPROVIDER");
				BaseEntity internship = rules.getChildren(beg.getCode(), "LNK_BEG", "PRODUCT");

				rules.println("ApplicationCode     :: " + application.getCode());
				rules.println("ApplicantCode     :: " + applicant.getCode());
				rules.println("BaseEntityCode     :: " + beg.getCode());
				rules.println("HostCompanyCode     :: " + hostCompany.getCode());
				//rules.println("eduProviderCode     :: " + eduProvider.getCode());
				rules.println("InternshipCode     :: " + internship.getCode());

				if(applicantCode != null){
					
					List<String> userCodes = new ArrayList<String>();
					userCodes.add(rules.getUser().getCode());
					userCodes.add(applicantCode);
					
					rules.saveAnswer( new Answer( rules.getUser().getCode(), applicationCode, "PRI_IS_REJECTED", "TRUE" ) );
					rules.updateBaseEntityStatus(applicationCode, userCodes, "red");            

					rules.setState("APPLICATION_IS_REJECTED");

					rules.set("hostBeg", hostCompany);
                    //rules.set("eduProviderBeg", eduProvider);
                    rules.set("begBe", beg);
			        rules.set("internshipBe", internship);
			        rules.set("internBe", applicant );

					rules.setState("SEND_REJECTED_MESSAGE_TO_INTERN");
					rules.setState("SEND_REJECTED_MESSAGE_TO_HOST_COMPANY");
                    //rules.setState("SEND_REJECTED_MESSAGE_TO_EDU_PROVIDER");
				}else{
					rules.println("applicantCode is null");
				}
			}else{
				rules.println("application is null");
			}	
		}else{
			rules.println("applicationCode is null");
		}
	 	rules.footer();      
end
