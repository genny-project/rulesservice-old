package life.genny.rules;


import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;

/* TODO: Need to remove this internmatch specific rules to internmatch prj folder later, its kept here in shared folder only because
 * there is issue with startup rules being fired only from shared folder.
 * It will be moved once this issue is solved.
 */
rule "Generate internmatch Tree Roles"

    ruleflow-group 'GenerateTree'
    salience 680

     when
       rules: QRules( realm() == "internmatch" && isState("GENERATE_TREE_RULES") && !isState("LOOP_GENERATE_TREE_RULES") )
     then

     	rules.header();
        rules.setState("LOOP_GENERATE_TREE_RULES");
		rules.println("Generating specific Tree Roles for "+rules.realm());
		
		/* Roles related to TreeView Root */
		List<Answer> grpRoot = new ArrayList<>();
        grpRoot.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_BEGS", "PRI_IS_AGENT,PRI_IS_BUYER"));
        grpRoot.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_INTERNS", "PRI_IS_AGENT"));
        grpRoot.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_HOST_COMPANY_REPRESENTATIVES", "PRI_IS_AGENT"));
        grpRoot.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_EDU_PROVIDER_REPRESENTATIVES", "PRI_IS_AGENT"));
        grpRoot.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_HOST_COMPANIES", "PRI_IS_AGENT"));
        grpRoot.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_EDU_PROVIDERS", "PRI_IS_AGENT"));
		grpRoot.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_INTERNSHIPS_INTERN", "PRI_IS_SELLER"));
		grpRoot.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_STUDENTS", "PRI_IS_EDU_PROVIDER_STAFF"));
        grpRoot.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_STAFFS", "PRI_IS_AGENT,PRI_IS_BUYER,PRI_IS_EDU_PROVIDER_STAFF"));
		rules.baseEntity.saveAnswers(grpRoot);

		/* Roles related to TreeView GRP_BEGS */
		List<Answer> grpBegs = new ArrayList<>();
        grpBegs.add(new Answer("GRP_BEGS", "GRP_BEGS", "GRP_NEW_ITEMS", "PRI_IS_AGENT,PRI_IS_BUYER"));
        grpBegs.add(new Answer("GRP_BEGS", "GRP_BEGS", "GRP_DRAFTS", "PRI_IS_AGENT,PRI_IS_BUYER"));
        grpBegs.add(new Answer("GRP_BEGS", "GRP_BEGS", "GRP_BIN", "PRI_IS_AGENT,PRI_IS_BUYER"));
        grpBegs.add(new Answer("GRP_BEGS", "GRP_BEGS", "GRP_FILLED", "PRI_IS_AGENT,PRI_IS_BUYER"));
		rules.baseEntity.saveAnswers(grpBegs);


        rules.footer();
end
