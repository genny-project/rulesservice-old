package life.genny.rules;

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.VertxUtils;

rule "Generate Tree Roles"

    ruleflow-group 'GenerateTree'
    salience 690

     when
       rules: QRules( isState("GENERATE_TREE") && !isState("LOOP_GENERATE_TREE") )
     then
		rules.header();
		rules.setState("LOOP_GENERATE_TREE");

		rules.println("Generating Base Tree Rules for "+rules.realm());
		
		/* Roles related to TreeView Root */
		List<Answer> attributesAnsRoot = new ArrayList<>();
		attributesAnsRoot.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_DRAFTS", "CAP_READ_DRAFTS"));
        attributesAnsRoot.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_BIN", "CAP_DELETE_ITEM"));
		attributesAnsRoot.add(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_COMPANY_SETTINGS", "PRI_IS_COMPANY,CAP_UPDATE_ROLES"));
		rules.baseEntity.saveAnswers(attributesAnsRoot);

		/* Roles related to TreeView item Reports */
	     List<Answer> attributesAns = new ArrayList<>();
		 attributesAns.add(new Answer("GRP_REPORTS", "GRP_REPORTS", "GRP_REPORTS_USER", "PRI_IS_NOTHING")); //Hiding User report from Ch40
		 attributesAns.add(new Answer("GRP_REPORTS", "GRP_REPORTS", "GRP_REPORTS_SELLER", "PRI_IS_SELLER"));
		 attributesAns.add(new Answer("GRP_REPORTS", "GRP_REPORTS", "GRP_REPORTS_BUYER", "PRI_IS_BUYER"));
		 attributesAns.add(new Answer("GRP_REPORTS", "GRP_REPORTS", "GRP_REPORTS_ADMIN", "PRI_IS_ADMIN"));	

		 rules.baseEntity.saveAnswers(attributesAns);
		 
		rules.setState("GENERATE_TREE_RULES");
     	rules.footer();
end
