package life.genny.rules;

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.VertxUtils;

rule "Generate Tree Roles BUTLER"

    ruleflow-group 'GenerateTree'
    salience 690

     when
       rules: QRules( realm() == "butler" && isState("GENERATE_TREE") && !isState("LOOP_GENERATE_TREE_BUTLER") )
     then
		rules.header();
		rules.setState("LOOP_GENERATE_TREE_BUTLER");

		rules.println("Generating Base Tree Rules for "+rules.realm());


		rules.baseEntity.saveAnswer(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_DRAFTS", "PRI_IS_BUYER, PRI_IS_ADMIN"));
		rules.baseEntity.saveAnswer(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_BIN", "PRI_IS_BUYER,PRI_IS_ADMIN"));
		rules.baseEntity.saveAnswer(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_DASHBOARD", "PRI_IS_BUYER,PRI_IS_SELLER"));
		rules.baseEntity.saveAnswer(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_ORDER_INACTIVE_RELEASES", "PRI_IS_BUYER"));
		rules.baseEntity.saveAnswer(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_RAIL_YARDS", "PRI_IS_BUYER,PRI_IS_ADMIN"));
		rules.baseEntity.saveAnswer(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_TRANSPORT_COMPANIES", "PRI_IS_ADMIN"));
		rules.baseEntity.saveAnswer(new Answer("GRP_ROOT", "GRP_ROOT", "GRP_MESSAGES", "PRI_IS_BUYER"));
		
		rules.baseEntity.saveAnswer(new Answer("GRP_DASHBOARD", "GRP_DASHBOARD", "GRP_NEW_ITEMS", "PRI_IS_BUYER"));
		rules.baseEntity.saveAnswer(new Answer("GRP_DASHBOARD", "GRP_DASHBOARD", "GRP_ORDER_ACTIVE_CONFIRMED", "PRI_IS_BUYER,PRI_IS_SELLER"));
		rules.baseEntity.saveAnswer(new Answer("GRP_DASHBOARD", "GRP_DASHBOARD", "GRP_ORDER_ACTIVE_INTRANSIT", "PRI_IS_BUYER,PRI_IS_SELLER"));
		rules.baseEntity.saveAnswer(new Answer("GRP_DASHBOARD", "GRP_DASHBOARD", "GRP_ORDER_ACTIVE_DELIVERED", "PRI_IS_BUYER,PRI_IS_SELLER"));
		rules.baseEntity.saveAnswer(new Answer("GRP_DASHBOARD", "GRP_DASHBOARD", "GRP_ORDER_ACTIVE_COMPLETED", "PRI_IS_BUYER,PRI_IS_SELLER"));
		
		rules.setState("GENERATE_TREE_RULES");
     	rules.footer();
end
