package life.genny.rules;

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.VertxUtils;

rule "GenerateRoles"

    ruleflow-group 'GenerateRoles'
    salience 700

     when
       rules: QRules(isState("GENERATE_STARTUP") && isState("GENERATE_TEST_ROLES") && !isState("GENERATE_ROLES"))
     then

    rules.header();

    rules.setState("GENERATE_ROLES");
		rules.println("Generating Roles Cache for "+rules.realm());

		List<BaseEntity> roles = rules.baseEntity.getBaseEntitysByParentAndLinkCode("GRP_ROLES", "LNK_CORE", 0, 500, false);

		// Save the roles for future use
		QDataBaseEntityMessage rolesMsg = new QDataBaseEntityMessage(roles.toArray(new BaseEntity[0]),"GRP_ROLES","LNK_CORE");
		VertxUtils.putObject(rules.realm(), "ROLES", rules.realm(), rolesMsg);

 
    rules.footer();

end
