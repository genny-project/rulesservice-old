package life.genny.rules;

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.VertxUtils;

rule "GenerateTestRoles"

    ruleflow-group 'GenerateTestRoles'
    salience 200

     when
       rules: QRules(isState("GENERATE_STARTUP") && isState("GENERATE_CAPABILITIES") && !isState("GENERATE_TEST_ROLES"))
     then

    rules.header();

    rules.setState("GENERATE_TEST_ROLES");
	rules.println("Generating Test Roles for "+rules.realm());

	 
	rules.baseEntity.createRole("DRIVER","Transport Operator",
	"ADD_CHAT_MESSAGE","UPDATE_CHAT_MESSAGE",
	"SEND_GPS",
	"MARK_PICKUP"
	); 
	
	rules.baseEntity.createRole("OWNER","Freight Owner",
	"ADD_CHAT_MESSAGE","UPDATE_CHAT_MESSAGE",
	"ADD_ITEM",
	"MARK_DELIVERY"
	); 
	 
    rules.footer();

end
