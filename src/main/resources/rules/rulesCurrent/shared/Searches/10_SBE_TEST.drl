package life.genny.rules;

import life.genny.qwanda.message.QCmdMessage;
import life.genny.qwanda.message.QBulkMessage;
import life.genny.qwanda.message.QDataBaseEntityMessage;
import life.genny.qwanda.message.QEventMessage;
import life.genny.rules.QRules;
import io.vertx.core.json.JsonObject;
import java.util.List;
import java.util.ArrayList;
import life.genny.qwanda.entity.BaseEntity;
import life.genny.utils.VertxUtils;

rule "SBE_TEST"
    ruleflow-group 'GenerateSearches'
 
     when
       rules: QRules(isState("GENERATE_STARTUP") && !isState("SBE_TEST"))
     then

     rules.header();
 		rules.println("Creating Search Test for "+rules.realm());
		
         rules.setState(drools.getRule().getName());
         
  	     SearchEntity searchBE = new SearchEntity(drools.getRule().getName(),"Test Search")
   	   
  	     .addSort("PRI_CREATED","Created",SearchEntity.Sort.DESC)

  	     .setSourceCode("GRP_ROOT")
  	     
  	     .addFilter("PRI_CODE",SearchEntity.StringFilter.LIKE,"GRP_%")
  	     
  	     .setPageStart(0)
  	     .setPageSize(10000);
  	       	     
  		 VertxUtils.writeCachedJson(drools.getRule().getName(), JsonUtils.toJson(searchBE));
	

 
     rules.footer();
end
