package life.genny.rules;

import life.genny.rules.QRules;
import java.util.List;

rule "Check user company - Step 3"
     when
     	rules: QRules( 	isState("HAS_CREATED_COMPANY") && isState("CREATED_BASE_ENTITY") && !isState("HAS_LINKED_COMPANY") ) 
     then      
        rules.header();     
		rules.setState("HAS_LINKED_COMPANY");
		
		
		/* Get company code for this user 
        BaseEntity company = rules.baseEntityUtils.getParent(userCode, "LNK_STAFF");
        String companyCode = company.getCode();
       
        rules.println("UPDATING link value OF LINK BETWEEN   ::   " + companyCode + "  &  " + userCode);
        Link updateLink = new Link( companyCode, userCode, "LNK_STAFF", "DRIVER", (double) 1);
        String result = QwandaUtils.apiPutEntity(rules.getQwandaServiceUrl() + "/qwanda/links", JsonUtils.toJson(updateLink),rules.getToken());
        rules.publishBE(rules.getUser());

		/* Add Driver to GRP_DRIVERS 
     	rules.setState("TRIGGER_ADD_TO_GROUP");
     	rules.setState("TRIGGER_PROFILE_CHECK"); */
		
		/* we get the BE that was just created, which should be the company */
		BaseEntity companyBe = rules.getAsBaseEntity("baseEntity");	
		if(companyBe != null) {
			
			/* link SELLER to COMPANY */
			rules.set("linkSourceCode", companyBe.getCode());
			rules.set("linkTargetCode", rules.getUser().getCode());
			rules.set("linkCode", "LNK_STAFF");
			rules.set("linkValue", "STAFF");
			rules.set("linkWeight", 1.0);
			rules.setState("CREATE_LINK");

			rules.setState("LINKED_COMPANY_TO_SELLER");
			rules.setState("COMPANY_EXISTS");
		}
		else {
			
			/* TODO: handle this */
			
		}
		
		rules.footer();     		      
end
     	