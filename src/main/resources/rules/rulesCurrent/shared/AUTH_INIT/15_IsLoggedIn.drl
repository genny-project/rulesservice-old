package life.genny.rules;

import life.genny.rules.RulesUtils;
import life.genny.rules.QRules;
import life.genny.utils.VertxUtils;
import life.genny.qwanda.entity.BaseEntity;

rule "Is Logged In"
    when
        rules: QRules(  isUserPresent() == true  && 
                        !isState("IS_LOGGED_IN") && 
                        isState("USER_CHECKED")) 

     then
        rules.header();
     	
        BaseEntity user = rules.getUser();
        rules.println("user exists");
        rules.println("User "+user+" LOGGED IN"); 

  		rules.clearState("NO_USER");
  		
  		/* we mark the user as logged in */
        rules.setState("IS_LOGGED_IN");
        
       String attributeCode =  "PRI_IS_ADMIN";	
       if (rules.hasRole("admin")) {
	      if (user.getValue(attributeCode, null) == null || !(Boolean) user.getValue(attributeCode, null) )
		    {
                Answer isAdminAnswer = new Answer(user.getCode(), user.getCode(), attributeCode, "TRUE");
                isAdminAnswer.setWeight(1.0);
		        rules.saveAnswer(isAdminAnswer);
		    }
        }
        
        rules.println("Decoded Map:"+rules.getDecodedTokenMap().toString());
		
       drools.setFocus("SendAliases");
	   rules.footer();     		      
end
