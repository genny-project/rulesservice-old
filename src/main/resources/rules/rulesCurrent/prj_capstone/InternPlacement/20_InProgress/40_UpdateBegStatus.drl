package life.genny.rules;
import life.genny.rules.QRules;

/* Update BEG Status */
rule "Update BEG Status when Interview Is Completed"
	when
		rules: QRules( 	isState("INTERVIEW_COMPLETED_BY_ALL") && 
						!isState("LOOP_INTERVIEW_COMPLETED_BY_ALL") ) 
	 then
	 	rules.header();
        rules.setState("LOOP_INTERVIEW_COMPLETED_BY_ALL");

		BaseEntity beg= rules.getAsBaseEntity("begBe");

        if(beg != null){
            BaseEntity intern = rules.getChildren(beg.getCode(), "LNK_BEG", "INTERN");
            BaseEntity hostCompany = rules.getChildren(beg.getCode(), "LNK_BEG", "HOSTCOMPANY");
			
			if(intern != null && hostCompany != null){
            	
				BaseEntity eduProvider = rules.getParent(intern.getCode(), "LNK_EDU");
				if(eduProvider.getCode() != null){

					List<String> userCodes = new ArrayList<String>();
					userCodes.add(intern.getCode());
					
					String[] hostCompanyStaffCodes = null;
					String[] eduProviderStaffCodes = null;

					/* Get all the HOSTCOMPANY staffs */
					List<BaseEntity> hostCompanyStaffs = rules.getChildrens(hostCompany.getCode(), "LNK_STAFF", "STAFF");
					if(hostCompanyStaffs != null) {
						rules.println("No. of hostCompanyStaffs   ::   " + hostCompanyStaffs.size() );	
						for(BaseEntity hostCompanyStaff : hostCompanyStaffs) {
							userCodes.add(hostCompanyStaff.getCode());
							rules.println("HC staff   ::   " + hostCompanyStaff.getCode());
						}
					}

					/* Get all the EDU_PROVIDER staffs */
					List<BaseEntity> eduProviderStaffs = rules.getChildrens(eduProvider.getCode(), "LNK_EDU", "STAFF");
					if(eduProviderStaffs != null) {
						rules.println("No. of eduProviderStaffs   ::   " + eduProviderStaffs.size() );	
						for(BaseEntity eduProviderStaff : eduProviderStaffs) {
							userCodes.add(eduProviderStaff.getCode());
							rules.println("EDU staff   ::   " + eduProviderStaff.getCode());
							
						}
					}
					rules.println("usercodes   ::   " + Arrays.toString(userCodes.toArray()));
		   			rules.updateBaseEntityStatus(beg, userCodes, "green");
					
        			rules.setState("UPDATED_BEG_STATUS");
					
				}else{
					rules.println("eduProvider is null");
				}
			}else{
				rules.println("hostCompany is null");
				rules.println("intern is null");
			}
        }else{
			rules.println("beg is null");
		}
	 	rules.footer();      
end
