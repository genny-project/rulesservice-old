package life.genny.rules;
import life.genny.rules.QRules;

/* Send Company Questions */
rule "Ask Registration - Host Company - STEP 2"
    when
        rules: QRules(  isState("SEND_HOST_COMPANY_QUESTION") &&
        				isState("SENT_USER_QUESTION") &&
        				isState("HOST_COMPANY_EXISTS") &&
        				isState("PROFILE_NOT_COMPLETED") &&
        				isState("PRI_IS_HOST_COMPANY") &&
        				isState("SENT_REGISTRATION_DATA") &&
						isState("SENT_QUESTION") && 
						isState("QUE_USER_HOST_COMPANY_GRP") &&
						!isState("LOOP_ASK_REGISTRATION_HOST_COMPANY_STEP2") ) 
     then 
 		rules.header();		
		rules.setState("LOOP_ASK_REGISTRATION_HOST_COMPANY_STEP2");
 		
		/* Get Company BaseEntity from map */
		BaseEntity company = rules.getAsBaseEntity("companyBe");
		if(company != null){
			String questionSourceCode = rules.getUser().getCode();
			String questionTargetCode = company.getCode();

			/* send registration selection data */
     		rules.sendSelections("GRP_HOST_COMPANYS", "LNK_CORE", 20);
			
			/* send question group for host company */
			rules.set("questionSourceCode", questionSourceCode);
			rules.set("questionTargetCode", questionTargetCode);	
			rules.set("questionGroupCode", "QUE_HOST_COMPANY_GRP");
			rules.setState("SEND_QUESTION");
			
			rules.setState("SENT_HOST_COMPANY_QUESTION");
			rules.setState("SEND_HOST_COMPANY_REGISTRATION_LAYOUT");
			
		}else{
			rules.println("company is null");
		}
		
 		rules.footer();
end
