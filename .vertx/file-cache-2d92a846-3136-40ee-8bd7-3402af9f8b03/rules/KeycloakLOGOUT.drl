package com.sample
 
import life.genny.qwanda.message.QEventMessage;
import life.genny.qwanda.message.QMessage.MessageData;
import life.genny.qwanda.message.QCmdMessage;
import io.vertx.rxjava.core.eventbus.EventBus;
import io.vertx.core.buffer.Buffer;
import com.google.gson.Gson;
import life.genny.qwanda.Answer;
import life.genny.qwanda.message.QDataAnswerMessage;
import life.genny.qwandautils.KeycloakUtils;
import life.genny.qwandautils.QwandaUtils;
import life.genny.qwanda.message.QDataAskMessage;
import life.genny.qwanda.Ask;

import java.lang.reflect.Type;
import java.util.Map;
import java.time.LocalDateTime;
import java.time.ZonedDateTime;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.JsonPrimitive;
import com.google.gson.JsonSerializationContext;
import com.google.gson.FieldNamingPolicy;
import io.vertx.core.json.JsonObject;
import java.time.format.DateTimeFormatter;
import life.genny.qwanda.DateTimeDeserializer;

 global java.lang.String REACT_APP_QWANDA_API_URL;
 global java.lang.String REACT_APP_VERTX_URL;
 global java.lang.String KEYCLOAKIP;
   

rule "KEYCLOAK_LOGOUT"
    when
    	eval(false)
      //  m : QEventMessage( QEventMessage.getData().getCode().equals("KEYCLOAK_LOGOUT") )
      //  bus: EventBus()
      // $map : Map($value: this["token"])
       
       // $map: Map(this["token"])
    then
/*		System.out.println("Alyson KEYCLOAK_LOGOUT RULE");
 //		System.out.println("Rule Token is "+((String)$map.get("token")));
  	   String  keycloakProto = System.getenv("KEYCLOAK_PROTO")!=null?System.getenv("KEYCLOAK_PROTO"): "http://";
	    String keycloakPort = System.getenv("KEYCLOAK_PORT")!=null?System.getenv("KEYCLOAK_PORT"): "8180";
	   String  keycloakIP = System.getenv("HOSTIP")!=null?System.getenv("HOSTIP"): "localhost";
		String keycloakUrl = keycloakProto+keycloakIP+":"+keycloakPort;
		
		
		String keycloakClientId = System.getenv("KEYCLOAK_CLIENTID")!=null?System.getenv("KEYCLOAK_CLIENTID"):"curl";
		String keycloakUser = System.getenv("KEYCLOAK_USERID")!=null?System.getenv("KEYCLOAK_USERID"):"user2";
		String keycloakPassword = System.getenv("KEYCLOAK_PASSWORD")!=null?System.getenv("KEYCLOAK_PASSWORD"):"password2";
		String realm = System.getenv("KEYCLOAK_REALM")!=null?System.getenv("KEYCLOAK_REALM"):"wildfly-swarm-keycloak-example"; 	
		String secret = System.getenv("KEYCLOAK_SECRET")!=null?System.getenv("KEYCLOAK_SECRET"):"056b73c1-7078-411d-80ec-87d41c55c3b4";  
		String qwandaServiceUrl = System.getenv("REACT_APP_QWANDA_API_URL")==null?System.getenv("REACT_APP_QWANDA_API_URL"):REACT_APP_QWANDA_API_URL;
 		System.out.println("HOSTIP:"+keycloakIP+" ,qwandaUrl="+qwandaServiceUrl);
 		
 		System.out.println(keycloakUrl+":"+keycloakClientId+":"+keycloakUser+":"+keycloakPassword+":"+realm+":"+secret+":"+qwandaServiceUrl);
  
  
  
  	    String tokenString = (String)$map.get("token"); //KeycloakUtils.getToken(keycloakUrl,realm, keycloakClientId, secret, keycloakUser, keycloakPassword);
	//	System.out.println("tokenstr="+tokenString);
	String usercode = "PER_"+ m.getData().getValue().toUpperCase();
		String json = QwandaUtils.apiGet(qwandaServiceUrl+"/qwanda/baseentitys/"+usercode+"/attributes", tokenString);

		System.out.println("*******************");
		System.out.println("Json="+json);	
		System.out.println("*******************");
						
	//	bus.publish("cmds", json);
  */
        
end
	
 

